{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SelectorPill from '../GeneralStats/SelectorPill';\nimport { setSquadGameMode, setSquadPerspective } from '../../../redux/actions/togetherStatsActions';\n\nvar StatsFilter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StatsFilter, _Component);\n\n  function StatsFilter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StatsFilter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StatsFilter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"changeGameMode\", function (mode) {\n      return _this.props.setSquadGameMode(mode);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changePerspective\", function (perspective) {\n      return _this.props.setSquadPerspective(perspective);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderDuoButton\", function () {\n      var mode = _this.props.mode;\n\n      if (_this.props.squadFetched.length === 2) {\n        return React.createElement(SelectorPill, {\n          selected: mode === 'duo' ? true : false,\n          text: \"Duo\",\n          rounded: ['left'],\n          activeColor: \"warning\",\n          inactiveColor: \"secondary\",\n          onClick: function onClick() {\n            return _this.changeGameMode('duo');\n          },\n          disabled: _this.props.squadFetched.length > 2\n        });\n      } else {\n        return React.createElement(SelectorPill, {\n          text: \"Duo\",\n          rounded: ['left'],\n          disabled: true\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(StatsFilter, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          mode = _this$props.mode,\n          perspective = _this$props.perspective;\n      return React.createElement(\"div\", {\n        className: \"row mb-5 d-flex justify-content-center\"\n      }, React.createElement(\"div\", {\n        className: \"col-lg-8 col-md-10 col-12\"\n      }, React.createElement(\"div\", {\n        className: \"row d-flex justify-content-center\"\n      }, React.createElement(\"div\", {\n        className: \"col-6\"\n      }, React.createElement(\"ul\", {\n        className: \"nav nav-pills mt-2 nav-fill nav-justified border border-dark rounded\"\n      }, this.renderDuoButton(), React.createElement(SelectorPill, {\n        selected: mode === 'squad' ? true : false,\n        text: \"Squad\",\n        rounded: ['right'],\n        activeColor: \"warning\",\n        inactiveColor: \"secondary\",\n        onClick: function onClick() {\n          return _this2.changeGameMode('squad');\n        }\n      }))), React.createElement(\"div\", {\n        className: \"col-6\"\n      }, React.createElement(\"ul\", {\n        className: \"nav nav-pills mt-2 nav-fill nav-justified border border-dark rounded\"\n      }, React.createElement(SelectorPill, {\n        selected: perspective === 'FPP' ? true : false,\n        text: \"FPP\",\n        rounded: ['left'],\n        activeColor: \"warning\",\n        inactiveColor: \"secondary\",\n        onClick: function onClick() {\n          return _this2.changePerspective('FPP');\n        }\n      }), React.createElement(SelectorPill, {\n        selected: perspective === '' ? true : false,\n        text: \"TPP\",\n        rounded: ['right'],\n        activeColor: \"warning\",\n        inactiveColor: \"secondary\",\n        onClick: function onClick() {\n          return _this2.changePerspective('');\n        }\n      }))))));\n    }\n  }]);\n\n  return StatsFilter;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    squadFetched: state.squad.membersFetched,\n    mode: state.squad.mode,\n    perspective: state.squad.perspective\n  };\n};\n\nvar mapDispatchToProps = {\n  setSquadGameMode: setSquadGameMode,\n  setSquadPerspective: setSquadPerspective\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(StatsFilter);","map":null,"metadata":{},"sourceType":"module"}