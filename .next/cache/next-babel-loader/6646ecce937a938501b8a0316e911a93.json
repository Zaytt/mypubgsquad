{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport { sanitizeString } from '../../util/Util';\nimport Link from 'next/link';\nimport Router from 'next/router';\n\nvar SearchInputGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchInputGroup, _React$Component);\n\n  function SearchInputGroup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchInputGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchInputGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      squadSearch: '',\n      error: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componen\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"routeChange\", function (e) {\n      e.preventDefault();\n\n      var squadSearch = _this.filterString(_this.state.squadSearch);\n\n      if (squadSearch.split(',').length > 10 || squadSearch.split(',').length < 2) {\n        _this.setState({\n          error: 'Player Search must be between 2 and 10 players'\n        });\n\n        return;\n      } else {\n        _this.setState({\n          squadSearch: squadSearch,\n          error: null\n        });\n\n        var path = \"/stats/\".concat(squadSearch);\n        Router.push(path);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"filterString\", function (str) {\n      return sanitizeString(_this.state.squadSearch).split(/[ ,]+/).filter(Boolean).join(',');\n    });\n\n    return _this;\n  }\n\n  _createClass(SearchInputGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          placeholder = _this$props.placeholder,\n          value = _this$props.value,\n          type = _this$props.type,\n          navbar = _this$props.navbar;\n      var _this$state = this.state,\n          squadSearch = _this$state.squadSearch,\n          error = _this$state.error;\n\n      if (navbar) {\n        return React.createElement(\"div\", {\n          className: \"d-flex justify-content-center\"\n        }, React.createElement(\"form\", {\n          className: \"form-inline nav-bar-search-form d-flex justify-content-center\",\n          onSubmit: this.routeChange,\n          autoComplete: \"new-password\"\n        }, React.createElement(\"div\", {\n          className: \"input-group nav-bar-input-group\"\n        }, React.createElement(\"input\", {\n          className: \"form-control \".concat(error ? 'is-invalid' : 'border border-dark '),\n          type: \"search\",\n          name: \"squadSearch\",\n          placeholder: placeholder,\n          \"aria-label\": \"Search\",\n          value: squadSearch,\n          onChange: this.onChange,\n          ref: \"input1\"\n        }), React.createElement(\"div\", {\n          className: \"input-group-append\",\n          onClick: this.routeChange\n        }, React.createElement(\"span\", {\n          className: \"input-group-text text-dark bg-warning border-dark\",\n          style: {\n            cursor: 'pointer'\n          }\n        }, React.createElement(\"i\", {\n          className: \"fas fa-search\"\n        }))))));\n      } else return React.createElement(\"form\", {\n        onSubmit: this.routeChange\n      }, React.createElement(\"small\", {\n        className: \"form-text text-light mb-2\"\n      }, \"Type in up to 10 player names, separated by commas.\"), React.createElement(\"div\", {\n        className: \"input-group mb-1\"\n      }, React.createElement(\"div\", {\n        className: \"input-group-prepend\"\n      }, React.createElement(\"span\", {\n        className: \"input-group-text\"\n      }, React.createElement(\"i\", {\n        className: \"fas fa-search\"\n      }))), React.createElement(\"input\", {\n        className: \"form-control form-control-lg myinput \".concat(error ? 'is-invalid' : ''),\n        type: type,\n        placeholder: placeholder,\n        name: \"squadSearch\",\n        value: value,\n        onChange: this.onChange\n      })), error && React.createElement(\"div\", {\n        className: \"form-text text-danger\"\n      }, error), React.createElement(\"button\", {\n        className: \"btn btn-lg btn-warning mt-4\",\n        type: \"submit\"\n      }, \"Search Stats\"));\n    }\n  }]);\n\n  return SearchInputGroup;\n}(React.Component);\n\nSearchInputGroup.defaultProps = {\n  type: 'text'\n};\nexport default SearchInputGroup;","map":null,"metadata":{},"sourceType":"module"}