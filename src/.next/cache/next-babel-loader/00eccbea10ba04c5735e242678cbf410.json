{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport _isEmpty from 'lodash.isempty';\nimport SelectorPill from '../GeneralStats/SelectorPill';\nimport { selectPlayer } from '../../../redux/actions/togetherStatsActions';\n\nvar SquadMemberSelector =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SquadMemberSelector, _Component);\n\n  function SquadMemberSelector() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SquadMemberSelector);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SquadMemberSelector)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onButtonClick\", function (player) {\n      _this.props.setPlayer(player);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderPlayerButtons\", function () {\n      var _this$props = _this.props,\n          squad = _this$props.squad,\n          selectedPlayer = _this$props.selectedPlayer,\n          selectPlayer = _this$props.selectPlayer;\n\n      if (!_isEmpty(squad)) {\n        if (selectedPlayer === '') _this.props.selectPlayer(squad[0]);\n        return squad.map(function (player, index) {\n          var selected = player === selectedPlayer;\n          return React.createElement(SelectorPill, {\n            key: player,\n            text: player,\n            rounded: ['top'],\n            activeColor: \"dark\",\n            inactiveColor: \"secondary\",\n            border: index !== 0 && index !== squad.length - 1 ? 'border-dark border-top border-bottom' : 'border border-dark',\n            onClick: function onClick() {\n              return selectPlayer(player);\n            },\n            selected: selected\n          });\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(SquadMemberSelector, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"row d-flex justify-content-center text-muted mt-3\"\n      }, React.createElement(\"div\", {\n        className: \"col-12\"\n      }, React.createElement(\"ul\", {\n        className: \"nav nav-pills mt-2 nav-fill nav-justified\"\n      }, this.renderPlayerButtons())));\n    }\n  }]);\n\n  return SquadMemberSelector;\n}(Component);\n\n_defineProperty(SquadMemberSelector, \"propTypes\", {\n  squad: PropTypes.array.isRequired,\n  selectedPlayer: PropTypes.string.isRequired,\n  selectPlayer: PropTypes.func.isRequired\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    squad: state.squad.membersFetched,\n    selectedPlayer: state.squad.selectedPlayer\n  };\n};\n\nvar mapDispatchToProps = {\n  selectPlayer: selectPlayer\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SquadMemberSelector);","map":{"version":3,"sources":["/Users/ivan/Documents/Developer/Portfolio-Projects/mypubgsquad/mypubgsquad-next/src/components/stats_page/SquadStats/SquadMemberSelector.js"],"names":["React","Component","PropTypes","connect","_isEmpty","SelectorPill","selectPlayer","SquadMemberSelector","player","props","setPlayer","squad","selectedPlayer","map","index","selected","length","renderPlayerButtons","array","isRequired","string","func","mapStateToProps","state","membersFetched","mapDispatchToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,YAAT,QAA6B,6CAA7B;;IAEMC,mB;;;;;;;;;;;;;;;;;;oEAOY,UAAAC,MAAM,EAAI;AACxB,YAAKC,KAAL,CAAWC,SAAX,CAAqBF,MAArB;AACD,K;;0EAEqB,YAAM;AAAA,wBACsB,MAAKC,KAD3B;AAAA,UAClBE,KADkB,eAClBA,KADkB;AAAA,UACXC,cADW,eACXA,cADW;AAAA,UACKN,YADL,eACKA,YADL;;AAG1B,UAAI,CAACF,QAAQ,CAACO,KAAD,CAAb,EAAsB;AACpB,YAAIC,cAAc,KAAK,EAAvB,EAA2B,MAAKH,KAAL,CAAWH,YAAX,CAAwBK,KAAK,CAAC,CAAD,CAA7B;AAE3B,eAAOA,KAAK,CAACE,GAAN,CAAU,UAACL,MAAD,EAASM,KAAT,EAAmB;AAClC,cAAMC,QAAQ,GAAGP,MAAM,KAAKI,cAA5B;AAEA,iBACE,oBAAC,YAAD;AACE,YAAA,GAAG,EAAEJ,MADP;AAEE,YAAA,IAAI,EAAEA,MAFR;AAGE,YAAA,OAAO,EAAE,CAAC,KAAD,CAHX;AAIE,YAAA,WAAW,EAAC,MAJd;AAKE,YAAA,aAAa,EAAC,WALhB;AAME,YAAA,MAAM,EACJM,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAKH,KAAK,CAACK,MAAN,GAAe,CAAxC,GACI,sCADJ,GAEI,oBATR;AAWE,YAAA,OAAO,EAAE;AAAA,qBAAMV,YAAY,CAACE,MAAD,CAAlB;AAAA,aAXX;AAYE,YAAA,QAAQ,EAAEO;AAZZ,YADF;AAgBD,SAnBM,CAAP;AAoBD;AACF,K;;;;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAI,QAAA,SAAS,EAAC;AAAd,SACG,KAAKE,mBAAL,EADH,CADF,CADF,CADF;AASD;;;;EAlD+BhB,S;;gBAA5BM,mB,eACe;AACjBI,EAAAA,KAAK,EAAET,SAAS,CAACgB,KAAV,CAAgBC,UADN;AAEjBP,EAAAA,cAAc,EAAEV,SAAS,CAACkB,MAAV,CAAiBD,UAFhB;AAGjBb,EAAAA,YAAY,EAAEJ,SAAS,CAACmB,IAAV,CAAeF;AAHZ,C;;AAoDrB,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCZ,IAAAA,KAAK,EAAEY,KAAK,CAACZ,KAAN,CAAYa,cADa;AAEhCZ,IAAAA,cAAc,EAAEW,KAAK,CAACZ,KAAN,CAAYC;AAFI,GAAL;AAAA,CAA7B;;AAKA,IAAMa,kBAAkB,GAAG;AACzBnB,EAAAA,YAAY,EAAZA;AADyB,CAA3B;AAIA,eAAeH,OAAO,CACpBmB,eADoB,EAEpBG,kBAFoB,CAAP,CAGblB,mBAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport _isEmpty from 'lodash.isempty';\nimport SelectorPill from '../GeneralStats/SelectorPill';\nimport { selectPlayer } from '../../../redux/actions/togetherStatsActions';\n\nclass SquadMemberSelector extends Component {\n  static propTypes = {\n    squad: PropTypes.array.isRequired,\n    selectedPlayer: PropTypes.string.isRequired,\n    selectPlayer: PropTypes.func.isRequired\n  };\n\n  onButtonClick = player => {\n    this.props.setPlayer(player);\n  };\n\n  renderPlayerButtons = () => {\n    const { squad, selectedPlayer, selectPlayer } = this.props;\n\n    if (!_isEmpty(squad)) {\n      if (selectedPlayer === '') this.props.selectPlayer(squad[0]);\n\n      return squad.map((player, index) => {\n        const selected = player === selectedPlayer;\n\n        return (\n          <SelectorPill\n            key={player}\n            text={player}\n            rounded={['top']}\n            activeColor=\"dark\"\n            inactiveColor=\"secondary\"\n            border={\n              index !== 0 && index !== squad.length - 1\n                ? 'border-dark border-top border-bottom'\n                : 'border border-dark'\n            }\n            onClick={() => selectPlayer(player)}\n            selected={selected}\n          />\n        );\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"row d-flex justify-content-center text-muted mt-3\">\n        <div className=\"col-12\">\n          <ul className=\"nav nav-pills mt-2 nav-fill nav-justified\">\n            {this.renderPlayerButtons()}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  squad: state.squad.membersFetched,\n  selectedPlayer: state.squad.selectedPlayer\n});\n\nconst mapDispatchToProps = {\n  selectPlayer\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SquadMemberSelector);\n"]},"metadata":{},"sourceType":"module"}