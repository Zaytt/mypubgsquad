{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _isEmpty from 'lodash.isempty';\nimport SelectorPill from '../GeneralStats/SelectorPill';\nimport { selectPlayer } from '../../../redux/actions/togetherStatsActions';\n\nvar SquadMemberSelector =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SquadMemberSelector, _Component);\n\n  function SquadMemberSelector() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SquadMemberSelector);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SquadMemberSelector)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onButtonClick\", function (player) {\n      _this.props.setPlayer(player);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderPlayerButtons\", function () {\n      var _this$props = _this.props,\n          squad = _this$props.squad,\n          selectedPlayer = _this$props.selectedPlayer,\n          selectPlayer = _this$props.selectPlayer;\n\n      if (!_isEmpty(squad)) {\n        if (selectedPlayer === '') _this.props.selectPlayer(squad[0]);\n        return squad.map(function (player, index) {\n          var selected = player === selectedPlayer;\n          return React.createElement(SelectorPill, {\n            key: player,\n            text: player,\n            rounded: ['top'],\n            activeColor: \"dark\",\n            inactiveColor: \"secondary\",\n            border: index !== 0 && index !== squad.length - 1 ? 'border-dark border-top border-bottom' : 'border border-dark',\n            onClick: function onClick() {\n              return selectPlayer(player);\n            },\n            selected: selected\n          });\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(SquadMemberSelector, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"row d-flex justify-content-center text-muted mt-3\"\n      }, React.createElement(\"div\", {\n        className: \"col-12\"\n      }, React.createElement(\"ul\", {\n        className: \"nav nav-pills mt-2 nav-fill nav-justified\"\n      }, this.renderPlayerButtons())));\n    }\n  }]);\n\n  return SquadMemberSelector;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    squad: state.squad.membersFetched,\n    selectedPlayer: state.squad.selectedPlayer\n  };\n};\n\nvar mapDispatchToProps = {\n  selectPlayer: selectPlayer\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SquadMemberSelector);","map":null,"metadata":{},"sourceType":"module"}