{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport App, { Container } from 'next/app';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport store from '../redux/store';\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    // Only uncomment this method if you have blocking data requirements for\n    // every single page in your application. This disables the ability to\n    // perform automatic static optimization, causing every page in your app to\n    // be server-side rendered.\n    //\n    // static async getInitialProps({ Component, ctx }) {\n    //   let pageProps = {}\n    //\n    //   if (Component.getInitialProps) {\n    //     pageProps = await Component.getInitialProps(ctx)\n    //   }\n    //\n    //   return { pageProps }\n    // }\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          store = _this$props.store;\n      return React.createElement(Container, null, React.createElement(Provider, {\n        store: store\n      }, React.createElement(Component, pageProps)));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withRedux(store)(MyApp);","map":{"version":3,"sources":["/Users/ivan/Documents/Developer/Portfolio-Projects/mypubgsquad/mypubgsquad-next/pages/_app.js"],"names":["React","App","Container","Provider","withRedux","store","MyApp","props","Component","pageProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;IAEMC,K;;;;;;;;;;;;;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BAES;AAAA,wBACiC,KAAKC,KADtC;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAAA,UACuBJ,KADvB,eACuBA,KADvB;AAGP,aACE,oBAAC,SAAD,QACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEA;AAAjB,SACE,oBAAC,SAAD,EAAeI,SAAf,CADF,CADF,CADF;AAOD;;;;EA1BiBR,G;;AA6BpB,eAAeG,SAAS,CAACC,KAAD,CAAT,CAAiBC,KAAjB,CAAf","sourcesContent":["import React from 'react';\nimport App, { Container } from 'next/app';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport store from '../redux/store';\n\nclass MyApp extends App {\n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // static async getInitialProps({ Component, ctx }) {\n  //   let pageProps = {}\n  //\n  //   if (Component.getInitialProps) {\n  //     pageProps = await Component.getInitialProps(ctx)\n  //   }\n  //\n  //   return { pageProps }\n  // }\n\n  render() {\n    const { Component, pageProps, store } = this.props;\n\n    return (\n      <Container>\n        <Provider store={store}>\n          <Component {...pageProps} />\n        </Provider>\n      </Container>\n    );\n  }\n}\n\nexport default withRedux(store)(MyApp);\n"]},"metadata":{},"sourceType":"module"}