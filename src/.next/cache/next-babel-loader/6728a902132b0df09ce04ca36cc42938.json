{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport _isEmpty from 'lodash.isempty';\nimport _isEqual from 'lodash.isequal';\nimport _sortBy from 'lodash.sortby';\nimport { getPlayerSeasons } from '../../../redux/actions/playerSeasonsActions';\nimport { getSquadStats, setSquadMembersFetched, selectPlayer } from '../../../redux/actions/togetherStatsActions';\n\nvar SquadSearch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SquadSearch, _Component);\n\n  function SquadSearch() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SquadSearch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SquadSearch)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"searchSquadStats\", function () {\n      _this.props.membersPicked.sort();\n\n      _this.props.setSquadMembersFetched(_this.props.membersPicked);\n\n      _this.props.getSquadStats(_this.props.membersPicked.join(','));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"refreshSquadStats\", function () {\n      var membersFetchedArray = _this.props.membersFetched.join(',');\n\n      _this.props.getPlayerSeasons(membersFetchedArray, _this.props.season, true);\n\n      _this.props.getSquadStats(membersFetchedArray);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderSearchButton\", function () {\n      var searchButton = '';\n\n      if (_this.props.membersPicked && _this.props.membersPicked.length >= 2 && (_isEmpty(_this.props.stats) || !_isEqual(_sortBy(_this.props.membersPicked), _sortBy(_this.props.membersFetched)))) {\n        searchButton = React.createElement(\"li\", {\n          className: \"nav-item bg-warning rounded-left rounded-right \"\n        }, React.createElement(\"button\", {\n          className: \"btn btn-warning border border-dark rounded w-100\",\n          onClick: _this.searchSquadStats\n        }, React.createElement(\"i\", {\n          className: \"fas fa-search\"\n        }), \" Search\"));\n      } else {\n        searchButton = React.createElement(\"li\", {\n          className: \"nav-item  bg-secondary text-light rounded-left rounded-right disabled\"\n        }, React.createElement(\"button\", {\n          disabled: true,\n          className: \"btn btn-secondary disabled w-100 \"\n        }, React.createElement(\"i\", {\n          className: \"fas fa-search\"\n        }), \" Search\"));\n      }\n\n      return searchButton;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderReloadButton\", function () {\n      var reloadButton = '';\n\n      if (!_isEmpty(_this.props.stats) && _isEqual(_sortBy(_this.props.membersPicked), _sortBy(_this.props.membersFetched))) {\n        reloadButton = React.createElement(\"li\", {\n          className: \"nav-item bg-warning text-light rounded-right\"\n        }, React.createElement(\"button\", {\n          className: \"btn btn-warning w-100 border border-dark\",\n          onClick: _this.refreshSquadStats\n        }, React.createElement(\"i\", {\n          className: \"fas fa-redo-alt\"\n        }), \" Refresh\"));\n      } else {\n        reloadButton = React.createElement(\"li\", {\n          className: \"nav-item bg-secondary text-light rounded-right disabled\"\n        }, React.createElement(\"button\", {\n          disabled: true,\n          className: \"btn btn-secondary disabled w-100 \"\n        }, React.createElement(\"i\", {\n          className: \"fas fa-redo-alt\"\n        }), \" Refresh\"));\n      }\n\n      return reloadButton;\n    });\n\n    return _this;\n  }\n\n  _createClass(SquadSearch, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"row d-flex justify-content-center mb-2 mt-5\"\n      }, React.createElement(\"div\", {\n        className: \"col-lg-3 col-md-6 col-11\"\n      }, React.createElement(\"ul\", {\n        className: \"nav nav-pills mt-2 nav-fill nav-justified\"\n      }, this.renderSearchButton())));\n    }\n  }]);\n\n  return SquadSearch;\n}(Component);\n\n_defineProperty(SquadSearch, \"propTypes\", {\n  membersPicked: PropTypes.array.isRequired,\n  membersFetched: PropTypes.array.isRequired,\n  stats: PropTypes.object.isRequired,\n  season: PropTypes.string.isRequired\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    membersPicked: state.squad.membersPicked,\n    membersFetched: state.squad.membersFetched,\n    stats: state.squad.stats,\n    season: state.playerSeasons.season\n  };\n};\n\nvar mapDispatchToProps = {\n  getSquadStats: getSquadStats,\n  setSquadMembersFetched: setSquadMembersFetched,\n  selectPlayer: selectPlayer,\n  getPlayerSeasons: getPlayerSeasons\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SquadSearch);","map":{"version":3,"sources":["/Users/ivan/Documents/Developer/Portfolio-Projects/mypubgsquad/mypubgsquad-next/src/components/stats_page/SquadStats/SquadSearch.js"],"names":["React","Component","PropTypes","connect","_isEmpty","_isEqual","_sortBy","getPlayerSeasons","getSquadStats","setSquadMembersFetched","selectPlayer","SquadSearch","props","membersPicked","sort","join","membersFetchedArray","membersFetched","season","searchButton","length","stats","searchSquadStats","reloadButton","refreshSquadStats","renderSearchButton","array","isRequired","object","string","mapStateToProps","state","squad","playerSeasons","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport _isEmpty from 'lodash.isempty';\nimport _isEqual from 'lodash.isequal';\nimport _sortBy from 'lodash.sortby';\nimport { getPlayerSeasons } from '../../../redux/actions/playerSeasonsActions';\nimport {\n  getSquadStats,\n  setSquadMembersFetched,\n  selectPlayer\n} from '../../../redux/actions/togetherStatsActions';\nclass SquadSearch extends Component {\n  static propTypes = {\n    membersPicked: PropTypes.array.isRequired,\n    membersFetched: PropTypes.array.isRequired,\n    stats: PropTypes.object.isRequired,\n    season: PropTypes.string.isRequired\n  };\n\n  // Call the redux action to fetch the squad stats\n  searchSquadStats = () => {\n    this.props.membersPicked.sort();\n    this.props.setSquadMembersFetched(this.props.membersPicked);\n    this.props.getSquadStats(this.props.membersPicked.join(','));\n  };\n\n  // Call the redux action to refresh the squad stats\n  refreshSquadStats = () => {\n    const membersFetchedArray = this.props.membersFetched.join(',');\n    this.props.getPlayerSeasons(membersFetchedArray, this.props.season, true);\n    this.props.getSquadStats(membersFetchedArray);\n  };\n\n  /**\n   Renders search button. If the players have already been searched or have picked less than 2, it becomes disabled\n   */\n  renderSearchButton = () => {\n    let searchButton = '';\n    if (\n      this.props.membersPicked &&\n      this.props.membersPicked.length >= 2 &&\n      (_isEmpty(this.props.stats) ||\n        !_isEqual(_sortBy(this.props.membersPicked), _sortBy(this.props.membersFetched)))\n    ) {\n      searchButton = (\n        <li className=\"nav-item bg-warning rounded-left rounded-right \">\n          <button\n            className=\"btn btn-warning border border-dark rounded w-100\"\n            onClick={this.searchSquadStats}\n          >\n            <i className=\"fas fa-search\" /> Search\n          </button>\n        </li>\n      );\n    } else {\n      searchButton = (\n        <li className=\"nav-item  bg-secondary text-light rounded-left rounded-right disabled\">\n          <button disabled className=\"btn btn-secondary disabled w-100 \">\n            <i className=\"fas fa-search\" /> Search\n          </button>\n        </li>\n      );\n    }\n\n    return searchButton;\n  };\n\n  /**\n   * Renders refresh button. Activates once stats have been loaded and as long as the same players are being picked\n   */\n  renderReloadButton = () => {\n    let reloadButton = '';\n    if (\n      !_isEmpty(this.props.stats) &&\n      _isEqual(_sortBy(this.props.membersPicked), _sortBy(this.props.membersFetched))\n    ) {\n      reloadButton = (\n        <li className=\"nav-item bg-warning text-light rounded-right\">\n          <button\n            className=\"btn btn-warning w-100 border border-dark\"\n            onClick={this.refreshSquadStats}\n          >\n            <i className=\"fas fa-redo-alt\" /> Refresh\n          </button>\n        </li>\n      );\n    } else {\n      reloadButton = (\n        <li className=\"nav-item bg-secondary text-light rounded-right disabled\">\n          <button disabled className=\"btn btn-secondary disabled w-100 \">\n            <i className=\"fas fa-redo-alt\" /> Refresh\n          </button>\n        </li>\n      );\n    }\n\n    return reloadButton;\n  };\n\n  render() {\n    return (\n      <div className=\"row d-flex justify-content-center mb-2 mt-5\">\n        <div className=\"col-lg-3 col-md-6 col-11\">\n          <ul className=\"nav nav-pills mt-2 nav-fill nav-justified\">\n            {this.renderSearchButton()}\n            {/* {this.renderReloadButton()} */}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  membersPicked: state.squad.membersPicked,\n  membersFetched: state.squad.membersFetched,\n  stats: state.squad.stats,\n  season: state.playerSeasons.season\n});\n\nconst mapDispatchToProps = {\n  getSquadStats,\n  setSquadMembersFetched,\n  selectPlayer,\n  getPlayerSeasons\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SquadSearch);\n"]},"metadata":{},"sourceType":"module"}