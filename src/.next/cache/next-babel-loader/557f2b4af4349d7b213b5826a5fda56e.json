{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport _isEmpty from 'lodash.isempty';\nimport Separator from '../../common/Separator';\nimport Error from '../../common/Error';\nimport PlayerPicker from './PlayerPicker';\nimport SquadSearch from './SquadSearch';\nimport SquadStatsFilter from './SquadStatsFilter';\nimport SquadStatsSummary from './SquadStatsSummary';\nimport SquadMemberStats from './SquadMemberStats';\nimport SquadMemberSelector from './SquadMemberSelector';\nimport Spinner from '../../common/Spinner';\n\nvar TogetherStats =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TogetherStats, _Component);\n\n  function TogetherStats() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TogetherStats);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TogetherStats)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"renderSquadStats\", function () {\n      var _this$props = _this.props,\n          stats = _this$props.stats,\n          mode = _this$props.mode,\n          perspective = _this$props.perspective;\n      var gameMode = mode + perspective;\n      return _isEmpty(stats) ? null : React.createElement(React.Fragment, null, React.createElement(SquadStatsFilter, null), React.createElement(SquadStatsSummary, null), stats[gameMode].gamesPlayed === 0 ? '' : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"row  d-flex justify-content-center text-light mt-5\"\n      }, React.createElement(\"div\", {\n        className: \"col-lg-8 col-md-10 col-12 text-center\"\n      }, React.createElement(SquadMemberSelector, null))), React.createElement(SquadMemberStats, null)));\n    });\n\n    return _this;\n  }\n\n  _createClass(TogetherStats, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          loading = _this$props2.loading,\n          error = _this$props2.error;\n      return React.createElement(\"div\", {\n        className: \"container light-grey rounded\"\n      }, React.createElement(PlayerPicker, null), React.createElement(SquadSearch, null), React.createElement(Separator, {\n        color: \"secondary\",\n        length: 10,\n        margin: 4\n      }), loading ? React.createElement(Spinner, null) : error ? React.createElement(Error, {\n        error: error,\n        message: \"Oops! Something went wrong while fetching your squad's matches, please try again later\"\n      }) : this.renderSquadStats());\n    }\n  }]);\n\n  return TogetherStats;\n}(Component);\n\n_defineProperty(TogetherStats, \"propTypes\", {\n  stats: PropTypes.object.isRequired,\n  mode: PropTypes.string.isRequired,\n  perspective: PropTypes.string.isRequired\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.squad.loading,\n    error: state.squad.error,\n    stats: state.squad.stats,\n    mode: state.squad.mode,\n    perspective: state.squad.perspective\n  };\n};\n\nvar mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(TogetherStats);","map":{"version":3,"sources":["/Users/ivan/Documents/Developer/Portfolio-Projects/mypubgsquad/mypubgsquad-next/src/components/stats_page/SquadStats/TogetherStats.js"],"names":["React","Component","connect","PropTypes","_isEmpty","Separator","Error","PlayerPicker","SquadSearch","SquadStatsFilter","SquadStatsSummary","SquadMemberStats","SquadMemberSelector","Spinner","TogetherStats","props","stats","mode","perspective","gameMode","gamesPlayed","loading","error","renderSquadStats","object","isRequired","string","mapStateToProps","state","squad","mapDispatchToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;;IAEMC,a;;;;;;;;;;;;;;;;;;uEAOe,YAAM;AAAA,wBACc,MAAKC,KADnB;AAAA,UACfC,KADe,eACfA,KADe;AAAA,UACRC,IADQ,eACRA,IADQ;AAAA,UACFC,WADE,eACFA,WADE;AAEvB,UAAMC,QAAQ,GAAGF,IAAI,GAAGC,WAAxB;AACA,aAAOd,QAAQ,CAACY,KAAD,CAAR,GAAkB,IAAlB,GACL,oBAAC,KAAD,CAAO,QAAP,QACE,oBAAC,gBAAD,OADF,EAEE,oBAAC,iBAAD,OAFF,EAGGA,KAAK,CAACG,QAAD,CAAL,CAAgBC,WAAhB,KAAgC,CAAhC,GACC,EADD,GAGC,oBAAC,KAAD,CAAO,QAAP,QACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,oBAAC,mBAAD,OADF,CADF,CADF,EAME,oBAAC,gBAAD,OANF,CANJ,CADF;AAkBD,K;;;;;;;6BACQ;AAAA,yBACoB,KAAKL,KADzB;AAAA,UACCM,OADD,gBACCA,OADD;AAAA,UACUC,KADV,gBACUA,KADV;AAEP,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,oBAAC,YAAD,OADF,EAEE,oBAAC,WAAD,OAFF,EAGE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,WAAjB;AAA6B,QAAA,MAAM,EAAE,EAArC;AAAyC,QAAA,MAAM,EAAE;AAAjD,QAHF,EAIGD,OAAO,GACN,oBAAC,OAAD,OADM,GAEJC,KAAK,GACP,oBAAC,KAAD;AACE,QAAA,KAAK,EAAEA,KADT;AAEE,QAAA,OAAO;AAFT,QADO,GAMP,KAAKC,gBAAL,EAZJ,CADF;AAiBD;;;;EAhDyBtB,S;;gBAAtBa,a,eACe;AACjBE,EAAAA,KAAK,EAAEb,SAAS,CAACqB,MAAV,CAAiBC,UADP;AAEjBR,EAAAA,IAAI,EAAEd,SAAS,CAACuB,MAAV,CAAiBD,UAFN;AAGjBP,EAAAA,WAAW,EAAEf,SAAS,CAACuB,MAAV,CAAiBD;AAHb,C;;AAkDrB,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCP,IAAAA,OAAO,EAAEO,KAAK,CAACC,KAAN,CAAYR,OADW;AAEhCC,IAAAA,KAAK,EAAEM,KAAK,CAACC,KAAN,CAAYP,KAFa;AAGhCN,IAAAA,KAAK,EAAEY,KAAK,CAACC,KAAN,CAAYb,KAHa;AAIhCC,IAAAA,IAAI,EAAEW,KAAK,CAACC,KAAN,CAAYZ,IAJc;AAKhCC,IAAAA,WAAW,EAAEU,KAAK,CAACC,KAAN,CAAYX;AALO,GAAL;AAAA,CAA7B;;AAQA,IAAMY,kBAAkB,GAAG,EAA3B;AAEA,eAAe5B,OAAO,CACpByB,eADoB,EAEpBG,kBAFoB,CAAP,CAGbhB,aAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport _isEmpty from 'lodash.isempty';\nimport Separator from '../../common/Separator';\nimport Error from '../../common/Error';\nimport PlayerPicker from './PlayerPicker';\nimport SquadSearch from './SquadSearch';\nimport SquadStatsFilter from './SquadStatsFilter';\nimport SquadStatsSummary from './SquadStatsSummary';\nimport SquadMemberStats from './SquadMemberStats';\nimport SquadMemberSelector from './SquadMemberSelector';\nimport Spinner from '../../common/Spinner';\n\nclass TogetherStats extends Component {\n  static propTypes = {\n    stats: PropTypes.object.isRequired,\n    mode: PropTypes.string.isRequired,\n    perspective: PropTypes.string.isRequired\n  };\n\n  renderSquadStats = () => {\n    const { stats, mode, perspective } = this.props;\n    const gameMode = mode + perspective;\n    return _isEmpty(stats) ? null : (\n      <React.Fragment>\n        <SquadStatsFilter />\n        <SquadStatsSummary />\n        {stats[gameMode].gamesPlayed === 0 ? (\n          ''\n        ) : (\n          <React.Fragment>\n            <div className=\"row  d-flex justify-content-center text-light mt-5\">\n              <div className=\"col-lg-8 col-md-10 col-12 text-center\">\n                <SquadMemberSelector />\n              </div>\n            </div>\n            <SquadMemberStats />\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  };\n  render() {\n    const { loading, error } = this.props;\n    return (\n      <div className=\"container light-grey rounded\">\n        <PlayerPicker />\n        <SquadSearch />\n        <Separator color=\"secondary\" length={10} margin={4} />\n        {loading ? (\n          <Spinner />\n        ) : error ? (\n          <Error\n            error={error}\n            message={`Oops! Something went wrong while fetching your squad's matches, please try again later`}\n          />\n        ) : (\n          this.renderSquadStats()\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loading: state.squad.loading,\n  error: state.squad.error,\n  stats: state.squad.stats,\n  mode: state.squad.mode,\n  perspective: state.squad.perspective\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TogetherStats);\n"]},"metadata":{},"sourceType":"module"}