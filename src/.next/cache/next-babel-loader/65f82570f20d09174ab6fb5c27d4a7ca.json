{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport _isEmpty from 'lodash.isempty';\n\nvar SquadStatsSummary =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SquadStatsSummary, _Component);\n\n  function SquadStatsSummary() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SquadStatsSummary);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SquadStatsSummary)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"formatNames\", function () {\n      var text = '';\n      var squad = _this.props.squad;\n\n      if (!_isEmpty(squad)) {\n        text = squad.map(function (playerName, index) {\n          if (index === squad.length - 1) {\n            return '& ' + playerName;\n          } else if (index === squad.length - 2) {\n            return playerName + ' ';\n          } else {\n            return playerName + ', ';\n          }\n        });\n      }\n\n      return text;\n    });\n\n    return _this;\n  }\n\n  _createClass(SquadStatsSummary, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          stats = _this$props.stats,\n          mode = _this$props.mode,\n          perspective = _this$props.perspective;\n      var gameMode = mode + perspective;\n      var matchesInfo,\n          topTenInfo,\n          winInfo,\n          modeInfo = '';\n\n      switch (gameMode) {\n        case 'duo':\n          modeInfo = 'Duo TPP';\n          break;\n\n        case 'duoFPP':\n          modeInfo = 'Duo FPP';\n          break;\n\n        case 'squad':\n          modeInfo = 'Squad TPP';\n          break;\n\n        case 'squadFPP':\n          modeInfo = 'Squad FPP';\n          break;\n\n        default:\n          modeInfo = '';\n      } // A little formating to handle plurals\n\n\n      if (!_isEmpty(stats)) {\n        matchesInfo = stats[gameMode].gamesPlayed === 1 ? \"Played \".concat(stats[gameMode].gamesPlayed, \" \").concat(modeInfo, \" Match Together\") : \"Played \".concat(stats[gameMode].gamesPlayed, \" \").concat(modeInfo, \" Matches Together\");\n        topTenInfo = stats[gameMode].top10s === 1 ? \"Reached Top Ten \".concat(stats[gameMode].top10s, \" Time\") : \"Reached Top Ten \".concat(stats[gameMode].top10s, \" Times\");\n        winInfo = stats[gameMode].wins === 1 ? \"Earned \".concat(stats[gameMode].wins, \" Chicken Dinner\") : \"Earned \".concat(stats[gameMode].wins, \" Chicken Dinners\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"row d-flex justify-content-center\"\n      }, React.createElement(\"div\", {\n        className: \"col-lg-8 col-md-10 col-12\"\n      }, React.createElement(\"h4\", {\n        className: \"text-dark text-center\"\n      }, \"In the past 14 days,\"), React.createElement(\"h3\", {\n        className: \"text-dark text-center mb-4\"\n      }, this.formatNames(), \" have: \"), React.createElement(\"ul\", {\n        className: \"list-group  \"\n      }, React.createElement(\"li\", {\n        className: \"list-group-item bg-dark text-light border border-dark\"\n      }, React.createElement(\"h4\", {\n        className: \"text-center\"\n      }, React.createElement(\"i\", {\n        className: \"fas fa-users\"\n      }), \" \", React.createElement(\"span\", null, matchesInfo))), React.createElement(\"li\", {\n        className: \"list-group-item bg-dark text-light border border-dark\"\n      }, React.createElement(\"h4\", {\n        className: \"text-center\"\n      }, React.createElement(\"i\", {\n        className: \"fas fa-medal\"\n      }), \" \", topTenInfo)), React.createElement(\"li\", {\n        className: \"list-group-item bg-warning border border-dark\"\n      }, React.createElement(\"h4\", {\n        className: \"text-center\"\n      }, React.createElement(\"i\", {\n        className: \"fas fa-trophy\"\n      }), \" \", winInfo)))));\n    }\n  }]);\n\n  return SquadStatsSummary;\n}(Component);\n\n_defineProperty(SquadStatsSummary, \"propTypes\", {\n  squad: PropTypes.array.isRequired,\n  stats: PropTypes.object.isRequired,\n  mode: PropTypes.string.isRequired,\n  perspective: PropTypes.string.isRequired\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    stats: state.squad.stats,\n    squad: state.squad.membersFetched,\n    mode: state.squad.mode,\n    perspective: state.squad.perspective\n  };\n};\n\nvar mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(SquadStatsSummary);","map":{"version":3,"sources":["/Users/ivan/Documents/Developer/Portfolio-Projects/mypubgsquad/mypubgsquad-next/src/components/stats_page/SquadStats/SquadStatsSummary.js"],"names":["React","Component","PropTypes","connect","_isEmpty","SquadStatsSummary","text","squad","props","map","playerName","index","length","stats","mode","perspective","gameMode","matchesInfo","topTenInfo","winInfo","modeInfo","gamesPlayed","top10s","wins","formatNames","array","isRequired","object","string","mapStateToProps","state","membersFetched","mapDispatchToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;IAEMC,iB;;;;;;;;;;;;;;;;;;kEAQU,YAAM;AAClB,UAAIC,IAAI,GAAG,EAAX;AADkB,UAEVC,KAFU,GAEA,MAAKC,KAFL,CAEVD,KAFU;;AAGlB,UAAI,CAACH,QAAQ,CAACG,KAAD,CAAb,EAAsB;AACpBD,QAAAA,IAAI,GAAGC,KAAK,CAACE,GAAN,CAAU,UAACC,UAAD,EAAaC,KAAb,EAAuB;AACtC,cAAIA,KAAK,KAAKJ,KAAK,CAACK,MAAN,GAAe,CAA7B,EAAgC;AAC9B,mBAAO,OAAOF,UAAd;AACD,WAFD,MAEO,IAAIC,KAAK,KAAKJ,KAAK,CAACK,MAAN,GAAe,CAA7B,EAAgC;AACrC,mBAAOF,UAAU,GAAG,GAApB;AACD,WAFM,MAEA;AACL,mBAAOA,UAAU,GAAG,IAApB;AACD;AACF,SARM,CAAP;AASD;;AAED,aAAOJ,IAAP;AACD,K;;;;;;;6BAEQ;AAAA,wBAC8B,KAAKE,KADnC;AAAA,UACCK,KADD,eACCA,KADD;AAAA,UACQC,IADR,eACQA,IADR;AAAA,UACcC,WADd,eACcA,WADd;AAEP,UAAMC,QAAQ,GAAGF,IAAI,GAAGC,WAAxB;AACA,UAAIE,WAAJ;AAAA,UACEC,UADF;AAAA,UAEEC,OAFF;AAAA,UAGEC,QAAQ,GAAG,EAHb;;AAKA,cAAQJ,QAAR;AACE,aAAK,KAAL;AACEI,UAAAA,QAAQ,GAAG,SAAX;AACA;;AACF,aAAK,QAAL;AACEA,UAAAA,QAAQ,GAAG,SAAX;AACA;;AACF,aAAK,OAAL;AACEA,UAAAA,QAAQ,GAAG,WAAX;AACA;;AACF,aAAK,UAAL;AACEA,UAAAA,QAAQ,GAAG,WAAX;AACA;;AACF;AACEA,UAAAA,QAAQ,GAAG,EAAX;AAdJ,OARO,CAyBP;;;AACA,UAAI,CAAChB,QAAQ,CAACS,KAAD,CAAb,EAAsB;AACpBI,QAAAA,WAAW,GACTJ,KAAK,CAACG,QAAD,CAAL,CAAgBK,WAAhB,KAAgC,CAAhC,oBACcR,KAAK,CAACG,QAAD,CAAL,CAAgBK,WAD9B,cAC6CD,QAD7C,wCAEcP,KAAK,CAACG,QAAD,CAAL,CAAgBK,WAF9B,cAE6CD,QAF7C,sBADF;AAKAF,QAAAA,UAAU,GACRL,KAAK,CAACG,QAAD,CAAL,CAAgBM,MAAhB,KAA2B,CAA3B,6BACuBT,KAAK,CAACG,QAAD,CAAL,CAAgBM,MADvC,uCAEuBT,KAAK,CAACG,QAAD,CAAL,CAAgBM,MAFvC,WADF;AAKAH,QAAAA,OAAO,GACLN,KAAK,CAACG,QAAD,CAAL,CAAgBO,IAAhB,KAAyB,CAAzB,oBACcV,KAAK,CAACG,QAAD,CAAL,CAAgBO,IAD9B,wCAEcV,KAAK,CAACG,QAAD,CAAL,CAAgBO,IAF9B,qBADF;AAID;;AAED,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAI,QAAA,SAAS,EAAC;AAAd,gCADF,EAEE;AAAI,QAAA,SAAS,EAAC;AAAd,SAA4C,KAAKC,WAAL,EAA5C,YAFF,EAGE;AAAI,QAAA,SAAS,EAAC;AAAd,SACE;AAAI,QAAA,SAAS,EAAC;AAAd,SACE;AAAI,QAAA,SAAS,EAAC;AAAd,SACE;AAAG,QAAA,SAAS,EAAC;AAAb,QADF,OACiC,kCAAOP,WAAP,CADjC,CADF,CADF,EAME;AAAI,QAAA,SAAS,EAAC;AAAd,SACE;AAAI,QAAA,SAAS,EAAC;AAAd,SACE;AAAG,QAAA,SAAS,EAAC;AAAb,QADF,OACkCC,UADlC,CADF,CANF,EAWE;AAAI,QAAA,SAAS,EAAC;AAAd,SACE;AAAI,QAAA,SAAS,EAAC;AAAd,SACE;AAAG,QAAA,SAAS,EAAC;AAAb,QADF,OACmCC,OADnC,CADF,CAXF,CAHF,CADF,CADF;AAyBD;;;;EA9F6BlB,S;;gBAA1BI,iB,eACe;AACjBE,EAAAA,KAAK,EAAEL,SAAS,CAACuB,KAAV,CAAgBC,UADN;AAEjBb,EAAAA,KAAK,EAAEX,SAAS,CAACyB,MAAV,CAAiBD,UAFP;AAGjBZ,EAAAA,IAAI,EAAEZ,SAAS,CAAC0B,MAAV,CAAiBF,UAHN;AAIjBX,EAAAA,WAAW,EAAEb,SAAS,CAAC0B,MAAV,CAAiBF;AAJb,C;;AAgGrB,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCjB,IAAAA,KAAK,EAAEiB,KAAK,CAACvB,KAAN,CAAYM,KADa;AAEhCN,IAAAA,KAAK,EAAEuB,KAAK,CAACvB,KAAN,CAAYwB,cAFa;AAGhCjB,IAAAA,IAAI,EAAEgB,KAAK,CAACvB,KAAN,CAAYO,IAHc;AAIhCC,IAAAA,WAAW,EAAEe,KAAK,CAACvB,KAAN,CAAYQ;AAJO,GAAL;AAAA,CAA7B;;AAOA,IAAMiB,kBAAkB,GAAG,EAA3B;AAEA,eAAe7B,OAAO,CACpB0B,eADoB,EAEpBG,kBAFoB,CAAP,CAGb3B,iBAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport _isEmpty from 'lodash.isempty';\n\nclass SquadStatsSummary extends Component {\n  static propTypes = {\n    squad: PropTypes.array.isRequired,\n    stats: PropTypes.object.isRequired,\n    mode: PropTypes.string.isRequired,\n    perspective: PropTypes.string.isRequired\n  };\n\n  formatNames = () => {\n    let text = '';\n    const { squad } = this.props;\n    if (!_isEmpty(squad)) {\n      text = squad.map((playerName, index) => {\n        if (index === squad.length - 1) {\n          return '& ' + playerName;\n        } else if (index === squad.length - 2) {\n          return playerName + ' ';\n        } else {\n          return playerName + ', ';\n        }\n      });\n    }\n\n    return text;\n  };\n\n  render() {\n    const { stats, mode, perspective } = this.props;\n    const gameMode = mode + perspective;\n    let matchesInfo,\n      topTenInfo,\n      winInfo,\n      modeInfo = '';\n\n    switch (gameMode) {\n      case 'duo':\n        modeInfo = 'Duo TPP';\n        break;\n      case 'duoFPP':\n        modeInfo = 'Duo FPP';\n        break;\n      case 'squad':\n        modeInfo = 'Squad TPP';\n        break;\n      case 'squadFPP':\n        modeInfo = 'Squad FPP';\n        break;\n      default:\n        modeInfo = '';\n    }\n\n    // A little formating to handle plurals\n    if (!_isEmpty(stats)) {\n      matchesInfo =\n        stats[gameMode].gamesPlayed === 1\n          ? `Played ${stats[gameMode].gamesPlayed} ${modeInfo} Match Together`\n          : `Played ${stats[gameMode].gamesPlayed} ${modeInfo} Matches Together`;\n\n      topTenInfo =\n        stats[gameMode].top10s === 1\n          ? `Reached Top Ten ${stats[gameMode].top10s} Time`\n          : `Reached Top Ten ${stats[gameMode].top10s} Times`;\n\n      winInfo =\n        stats[gameMode].wins === 1\n          ? `Earned ${stats[gameMode].wins} Chicken Dinner`\n          : `Earned ${stats[gameMode].wins} Chicken Dinners`;\n    }\n\n    return (\n      <div className=\"row d-flex justify-content-center\">\n        <div className=\"col-lg-8 col-md-10 col-12\">\n          <h4 className=\"text-dark text-center\">In the past 14 days,</h4>\n          <h3 className=\"text-dark text-center mb-4\">{this.formatNames()} have: </h3>\n          <ul className=\"list-group  \">\n            <li className=\"list-group-item bg-dark text-light border border-dark\">\n              <h4 className=\"text-center\">\n                <i className=\"fas fa-users\" /> <span>{matchesInfo}</span>\n              </h4>\n            </li>\n            <li className=\"list-group-item bg-dark text-light border border-dark\">\n              <h4 className=\"text-center\">\n                <i className=\"fas fa-medal\" /> {topTenInfo}\n              </h4>\n            </li>\n            <li className=\"list-group-item bg-warning border border-dark\">\n              <h4 className=\"text-center\">\n                <i className=\"fas fa-trophy\" /> {winInfo}\n              </h4>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  stats: state.squad.stats,\n  squad: state.squad.membersFetched,\n  mode: state.squad.mode,\n  perspective: state.squad.perspective\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SquadStatsSummary);\n"]},"metadata":{},"sourceType":"module"}