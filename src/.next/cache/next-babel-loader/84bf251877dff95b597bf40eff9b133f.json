{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { GET_AUTH_ERRORS, AUTHENTICATE, AUTHENTICATE_FACEBOOK, DEAUTHENTICATE } from './types';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport { setAuthToken } from '../../utils/Util'; // Set logged in user\n\nexport var authenticateAction = function authenticateAction(user) {\n  return {\n    type: AUTHENTICATE,\n    payload: user\n  };\n};\nexport var authenticateFacebook = function authenticateFacebook(token) {\n  return {\n    type: AUTHENTICATE_FACEBOOK,\n    payload: token\n  };\n};\nexport var deAuthenticateAction = function deAuthenticateAction() {\n  return {\n    type: DEAUTHENTICATE\n  };\n};\nexport var restoreState = function restoreState(authState) {\n  return {\n    type: RESTORE_AUTH_STATE,\n    payload: authState\n  };\n}; // Register User\n\nexport var registerUser = function registerUser(userData) {\n  return function (dispatch) {\n    axios.post('api/auth/register', userData).then(function (res) {\n      return true;\n    })[\"catch\"](function (err) {\n      dispatch({\n        type: GET_AUTH_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Login - GET user Token\n\nexport var loginUser = function loginUser(userData) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", axios.post('api/auth/login', userData).then(function (res) {\n                  var user = res.data;\n                  dispatch(authenticateAction(user._id));\n                })[\"catch\"](function (err) {\n                  dispatch({\n                    type: GET_AUTH_ERRORS,\n                    payload: err.response.data\n                  });\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var loginUserFacebook = function loginUserFacebook() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var logoutUser = function logoutUser() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                axios.get('api/auth/logout').then(function (res) {\n                  return dispatch(deAuthenticateAction());\n                })[\"catch\"](function (err) {\n                  dispatch({\n                    type: GET_AUTH_ERRORS,\n                    payload: err.response.data\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var restore = function restore(savedState) {\n  return function (dispatch) {\n    dispatch(restoreState(savedState));\n  };\n};","map":null,"metadata":{},"sourceType":"module"}