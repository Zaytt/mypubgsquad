{"ast":null,"code":"import React from 'react';\nimport _round from 'lodash.round';\n\nfunction StatRow(props) {\n  var playerStat = props.playerStat,\n      squadStat = props.squadStat,\n      label = props.label,\n      type = props.type,\n      unit = props.unit,\n      nokills = props.nokills;\n  if (isNaN(playerStat)) playerStat = 0;\n  var info = '';\n\n  if (squadStat === 0) {}\n\n  if (type === 'total') {\n    // Show the stat description as the % of the Squad's Total\n    var stat = _round(playerStat / squadStat * 100, 0);\n\n    info = React.createElement(React.Fragment, null, React.createElement(\"span\", {\n      className: \"text-warning\"\n    }, \" \", stat, \"%\"), \" of the Squad's total \", label);\n  } else {\n    var diff = playerStat - squadStat;\n    var color = '';\n    var direction = '';\n\n    if (type === 'avg') {\n      // Show the stat description as the % above or below the Squad's Average\n      var percentage = Math.abs(_round(diff / squadStat * 100, 0));\n      if (isNaN(percentage)) percentage = 0;\n\n      if (diff > 0) {\n        direction = 'above';\n        color = 'text-success';\n      } else {\n        direction = 'below';\n        color = 'text-danger';\n      }\n\n      info = React.createElement(React.Fragment, null, React.createElement(\"span\", {\n        className: color\n      }, percentage, \"%\"), \" \", direction, \" the Squad's average\");\n    } else if (type === 'distance') {\n      //Means player hasn't made a Kill\n      if (nokills) {\n        info = React.createElement(React.Fragment, null, \"No Kills\");\n      } // Show the stat description as the difference in meters\n      else if (diff === 0) {\n          info = React.createElement(React.Fragment, null, label, \" in the Squad\");\n        } else {\n          info = React.createElement(React.Fragment, null, React.createElement(\"span\", {\n            className: \"text-danger\"\n          }, Math.abs(diff)), \" meters shorter than the \", label);\n        }\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"row mb-3 d-flex justify-content-center\"\n  }, React.createElement(\"div\", {\n    className: \"col-md-4 col-sm-3 col-4\"\n  }, React.createElement(\"h6\", {\n    className: \"font-weight-bold\"\n  }, label)), React.createElement(\"div\", {\n    className: \"col-md-2 col-sm-2 col-3\"\n  }, React.createElement(\"h6\", null, playerStat, \" \", unit)), React.createElement(\"div\", {\n    className: \"col-md-6 col-sm-7 col-5\"\n  }, React.createElement(\"h6\", null, info)));\n}\n\nexport default StatRow;","map":{"version":3,"sources":["/Users/ivan/Documents/Developer/Portfolio-Projects/mypubgsquad/mypubgsquad-next/src/components/stats_page/SquadStats/StatRow.js"],"names":["React","_round","StatRow","props","playerStat","squadStat","label","type","unit","nokills","isNaN","info","stat","diff","color","direction","percentage","Math","abs"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,MAChBC,UADgB,GACsCD,KADtC,CAChBC,UADgB;AAAA,MACJC,SADI,GACsCF,KADtC,CACJE,SADI;AAAA,MACOC,KADP,GACsCH,KADtC,CACOG,KADP;AAAA,MACcC,IADd,GACsCJ,KADtC,CACcI,IADd;AAAA,MACoBC,IADpB,GACsCL,KADtC,CACoBK,IADpB;AAAA,MAC0BC,OAD1B,GACsCN,KADtC,CAC0BM,OAD1B;AAEtB,MAAIC,KAAK,CAACN,UAAD,CAAT,EAAuBA,UAAU,GAAG,CAAb;AAEvB,MAAIO,IAAI,GAAG,EAAX;;AACA,MAAIN,SAAS,KAAK,CAAlB,EAAqB,CACpB;;AACD,MAAIE,IAAI,KAAK,OAAb,EAAsB;AACpB;AACA,QAAIK,IAAI,GAAGX,MAAM,CAAEG,UAAU,GAAGC,SAAd,GAA2B,GAA5B,EAAiC,CAAjC,CAAjB;;AACAM,IAAAA,IAAI,GACF,oBAAC,KAAD,CAAO,QAAP,QACE;AAAM,MAAA,SAAS,EAAC;AAAhB,YAAiCC,IAAjC,MADF,4BACuEN,KADvE,CADF;AAKD,GARD,MAQO;AACL,QAAIO,IAAI,GAAGT,UAAU,GAAGC,SAAxB;AACA,QAAIS,KAAK,GAAG,EAAZ;AACA,QAAIC,SAAS,GAAG,EAAhB;;AACA,QAAIR,IAAI,KAAK,KAAb,EAAoB;AAClB;AACA,UAAIS,UAAU,GAAGC,IAAI,CAACC,GAAL,CAASjB,MAAM,CAAEY,IAAI,GAAGR,SAAR,GAAqB,GAAtB,EAA2B,CAA3B,CAAf,CAAjB;AACA,UAAIK,KAAK,CAACM,UAAD,CAAT,EAAuBA,UAAU,GAAG,CAAb;;AACvB,UAAIH,IAAI,GAAG,CAAX,EAAc;AACZE,QAAAA,SAAS,GAAG,OAAZ;AACAD,QAAAA,KAAK,GAAG,cAAR;AACD,OAHD,MAGO;AACLC,QAAAA,SAAS,GAAG,OAAZ;AACAD,QAAAA,KAAK,GAAG,aAAR;AACD;;AACDH,MAAAA,IAAI,GACF,oBAAC,KAAD,CAAO,QAAP,QACE;AAAM,QAAA,SAAS,EAAEG;AAAjB,SAAyBE,UAAzB,MADF,OACgDD,SADhD,yBADF;AAKD,KAhBD,MAgBO,IAAIR,IAAI,KAAK,UAAb,EAAyB;AAC9B;AACA,UAAIE,OAAJ,EAAa;AACXE,QAAAA,IAAI,GAAG,oBAAC,KAAD,CAAO,QAAP,mBAAP;AACD,OAFD,CAGA;AAHA,WAIK,IAAIE,IAAI,KAAK,CAAb,EAAgB;AACnBF,UAAAA,IAAI,GAAG,oBAAC,KAAD,CAAO,QAAP,QAAiBL,KAAjB,kBAAP;AACD,SAFI,MAEE;AACLK,UAAAA,IAAI,GACF,oBAAC,KAAD,CAAO,QAAP,QACE;AAAM,YAAA,SAAS,EAAC;AAAhB,aAA+BM,IAAI,CAACC,GAAL,CAASL,IAAT,CAA/B,CADF,+BACiFP,KADjF,CADF;AAKD;AACF;AACF;;AAED,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAI,IAAA,SAAS,EAAC;AAAd,KAAkCA,KAAlC,CADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,gCACGF,UADH,OACgBI,IADhB,CADF,CAJF,EASE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,gCAAKG,IAAL,CADF,CATF,CADF;AAeD;;AAED,eAAeT,OAAf","sourcesContent":["import React from 'react';\nimport _round from 'lodash.round';\n\nfunction StatRow(props) {\n  let { playerStat, squadStat, label, type, unit, nokills } = props;\n  if (isNaN(playerStat)) playerStat = 0;\n\n  let info = '';\n  if (squadStat === 0) {\n  }\n  if (type === 'total') {\n    // Show the stat description as the % of the Squad's Total\n    let stat = _round((playerStat / squadStat) * 100, 0);\n    info = (\n      <React.Fragment>\n        <span className=\"text-warning\"> {stat}%</span> of the Squad's total {label}\n      </React.Fragment>\n    );\n  } else {\n    let diff = playerStat - squadStat;\n    let color = '';\n    let direction = '';\n    if (type === 'avg') {\n      // Show the stat description as the % above or below the Squad's Average\n      let percentage = Math.abs(_round((diff / squadStat) * 100, 0));\n      if (isNaN(percentage)) percentage = 0;\n      if (diff > 0) {\n        direction = 'above';\n        color = 'text-success';\n      } else {\n        direction = 'below';\n        color = 'text-danger';\n      }\n      info = (\n        <React.Fragment>\n          <span className={color}>{percentage}%</span> {direction} the Squad's average\n        </React.Fragment>\n      );\n    } else if (type === 'distance') {\n      //Means player hasn't made a Kill\n      if (nokills) {\n        info = <React.Fragment>No Kills</React.Fragment>;\n      }\n      // Show the stat description as the difference in meters\n      else if (diff === 0) {\n        info = <React.Fragment>{label} in the Squad</React.Fragment>;\n      } else {\n        info = (\n          <React.Fragment>\n            <span className=\"text-danger\">{Math.abs(diff)}</span> meters shorter than the {label}\n          </React.Fragment>\n        );\n      }\n    }\n  }\n\n  return (\n    <div className=\"row mb-3 d-flex justify-content-center\">\n      <div className=\"col-md-4 col-sm-3 col-4\">\n        <h6 className=\"font-weight-bold\">{label}</h6>\n      </div>\n      <div className=\"col-md-2 col-sm-2 col-3\">\n        <h6>\n          {playerStat} {unit}\n        </h6>\n      </div>\n      <div className=\"col-md-6 col-sm-7 col-5\">\n        <h6>{info}</h6>\n      </div>\n    </div>\n  );\n}\n\nexport default StatRow;\n"]},"metadata":{},"sourceType":"module"}