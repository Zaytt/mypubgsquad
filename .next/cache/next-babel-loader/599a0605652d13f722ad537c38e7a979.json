{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _isEmpty from 'lodash.isempty';\nimport Separator from '../../common/Separator';\nimport Error from '../../common/Error';\nimport PlayerPicker from './PlayerPicker';\nimport SquadSearch from './SquadSearch';\nimport SquadStatsFilter from './SquadStatsFilter';\nimport SquadStatsSummary from './SquadStatsSummary';\nimport SquadMemberStats from './SquadMemberStats';\nimport SquadMemberSelector from './SquadMemberSelector';\nimport Spinner from '../../common/Spinner';\n\nvar TogetherStats =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TogetherStats, _Component);\n\n  function TogetherStats() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TogetherStats);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TogetherStats)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"renderSquadStats\", function () {\n      var _this$props = _this.props,\n          stats = _this$props.stats,\n          mode = _this$props.mode,\n          perspective = _this$props.perspective;\n      var gameMode = mode + perspective;\n      return _isEmpty(stats) ? null : React.createElement(React.Fragment, null, React.createElement(SquadStatsFilter, null), React.createElement(SquadStatsSummary, null), stats[gameMode].gamesPlayed === 0 ? '' : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"row  d-flex justify-content-center text-light mt-5\"\n      }, React.createElement(\"div\", {\n        className: \"col-lg-8 col-md-10 col-12 text-center\"\n      }, React.createElement(SquadMemberSelector, null))), React.createElement(SquadMemberStats, null)));\n    });\n\n    return _this;\n  }\n\n  _createClass(TogetherStats, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          loading = _this$props2.loading,\n          error = _this$props2.error;\n      return React.createElement(\"div\", {\n        className: \"container light-grey rounded\"\n      }, React.createElement(PlayerPicker, null), React.createElement(SquadSearch, null), React.createElement(Separator, {\n        color: \"secondary\",\n        length: 10,\n        margin: 4\n      }), loading ? React.createElement(Spinner, null) : error ? React.createElement(Error, {\n        error: error,\n        message: \"Oops! Something went wrong while fetching your squad's matches, please try again later\"\n      }) : this.renderSquadStats());\n    }\n  }]);\n\n  return TogetherStats;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.squad.loading,\n    error: state.squad.error,\n    stats: state.squad.stats,\n    mode: state.squad.mode,\n    perspective: state.squad.perspective\n  };\n};\n\nvar mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(TogetherStats);","map":null,"metadata":{},"sourceType":"module"}