{"ast":null,"code":"import axios from 'axios';\nimport { getMatchesTogether } from '../../util/Util';\nimport { SET_SQUAD_MEMBERS, SET_SQUAD_MEMBERS_FETCHED, SET_SQUAD_MEMBERS_COLORS, SET_SQUAD_GAME_MODE, SET_SQUAD_PERSPECTIVE, SET_SQUAD_ERROR, SELECT_PLAYER, GET_SQUAD_STATS, LOADING_SQUAD_STATS } from './types';\nexport var setSquadMembers = function setSquadMembers(squadMembersArray) {\n  return {\n    type: SET_SQUAD_MEMBERS,\n    payload: squadMembersArray\n  };\n};\nexport var setSquadMembersFetched = function setSquadMembersFetched(squadMembersArray) {\n  return {\n    type: SET_SQUAD_MEMBERS_FETCHED,\n    payload: squadMembersArray\n  };\n};\nexport var setSquadMembersColors = function setSquadMembersColors(squadMembersColors) {\n  return {\n    type: SET_SQUAD_MEMBERS_COLORS,\n    payload: squadMembersColors\n  };\n};\nexport var setSquadGameMode = function setSquadGameMode(mode) {\n  return function (dispatch) {\n    dispatch({\n      type: SET_SQUAD_GAME_MODE,\n      payload: mode\n    });\n  };\n};\nexport var setSquadPerspective = function setSquadPerspective(perspective) {\n  return function (dispatch) {\n    dispatch({\n      type: SET_SQUAD_PERSPECTIVE,\n      payload: perspective\n    });\n  };\n};\nexport var selectPlayer = function selectPlayer(player) {\n  return function (dispatch) {\n    dispatch({\n      type: SELECT_PLAYER,\n      payload: player\n    });\n  };\n};\nexport var setSquadStatsLoading = function setSquadStatsLoading() {\n  return {\n    type: LOADING_SQUAD_STATS\n  };\n};\nexport var getSquadStats = function getSquadStats() {\n  return function (dispatch, getState) {\n    dispatch(setStatsLoading());\n    var store = getState();\n    var stats = store.playerSeasons.stats;\n    var membersPicked = store.squad.membersPicked;\n    var matches = getMatchesTogether(stats.filter(function (ps) {\n      return membersPicked.includes(ps.relationships.player.attributes.name);\n    }));\n    axios.post('/api/stats/matches', {\n      matches: matches,\n      playerNames: membersPicked\n    }).then(function (res) {\n      dispatch({\n        type: GET_SQUAD_STATS,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      dispatch({\n        type: SET_SQUAD_ERROR,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var setStatsLoading = function setStatsLoading() {\n  return {\n    type: LOADING_SQUAD_STATS\n  };\n};","map":{"version":3,"sources":["/Users/ivan/Documents/Developer/Portfolio-Projects/mypubgsquad/mypubgsquad-next/redux/actions/togetherStatsActions.js"],"names":["axios","getMatchesTogether","SET_SQUAD_MEMBERS","SET_SQUAD_MEMBERS_FETCHED","SET_SQUAD_MEMBERS_COLORS","SET_SQUAD_GAME_MODE","SET_SQUAD_PERSPECTIVE","SET_SQUAD_ERROR","SELECT_PLAYER","GET_SQUAD_STATS","LOADING_SQUAD_STATS","setSquadMembers","squadMembersArray","type","payload","setSquadMembersFetched","setSquadMembersColors","squadMembersColors","setSquadGameMode","mode","dispatch","setSquadPerspective","perspective","selectPlayer","player","setSquadStatsLoading","getSquadStats","getState","setStatsLoading","store","stats","playerSeasons","membersPicked","squad","matches","filter","ps","includes","relationships","attributes","name","post","playerNames","then","res","data","err","response"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { getMatchesTogether } from '../../util/Util';\n\nimport {\n  SET_SQUAD_MEMBERS,\n  SET_SQUAD_MEMBERS_FETCHED,\n  SET_SQUAD_MEMBERS_COLORS,\n  SET_SQUAD_GAME_MODE,\n  SET_SQUAD_PERSPECTIVE,\n  SET_SQUAD_ERROR,\n  SELECT_PLAYER,\n  GET_SQUAD_STATS,\n  LOADING_SQUAD_STATS\n} from './types';\n\nexport const setSquadMembers = squadMembersArray => ({\n  type: SET_SQUAD_MEMBERS,\n  payload: squadMembersArray\n});\n\nexport const setSquadMembersFetched = squadMembersArray => ({\n  type: SET_SQUAD_MEMBERS_FETCHED,\n  payload: squadMembersArray\n});\n\nexport const setSquadMembersColors = squadMembersColors => ({\n  type: SET_SQUAD_MEMBERS_COLORS,\n  payload: squadMembersColors\n});\n\nexport const setSquadGameMode = mode => dispatch => {\n  dispatch({\n    type: SET_SQUAD_GAME_MODE,\n    payload: mode\n  });\n};\n\nexport const setSquadPerspective = perspective => dispatch => {\n  dispatch({\n    type: SET_SQUAD_PERSPECTIVE,\n    payload: perspective\n  });\n};\n\nexport const selectPlayer = player => dispatch => {\n  dispatch({\n    type: SELECT_PLAYER,\n    payload: player\n  });\n};\n\nexport const setSquadStatsLoading = () => {\n  return {\n    type: LOADING_SQUAD_STATS\n  };\n};\n\nexport const getSquadStats = () => (dispatch, getState) => {\n  dispatch(setStatsLoading());\n\n  const store = getState();\n  const { stats } = store.playerSeasons;\n  const { membersPicked } = store.squad;\n\n  const matches = getMatchesTogether(\n    stats.filter(ps => membersPicked.includes(ps.relationships.player.attributes.name))\n  );\n\n  axios\n    .post('/api/stats/matches', { matches, playerNames: membersPicked })\n    .then(res => {\n      dispatch({\n        type: GET_SQUAD_STATS,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_SQUAD_ERROR,\n        payload: err.response.data\n      });\n    });\n};\n\nexport const setStatsLoading = () => {\n  return {\n    type: LOADING_SQUAD_STATS\n  };\n};\n"]},"metadata":{},"sourceType":"module"}