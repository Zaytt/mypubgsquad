{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { GET_PLAYER_SEASONS, REFRESH_PLAYER_SEASONS, LOADING_STATS, SET_GAME_MODE, SET_PERSPECTIVE, SET_SEASON, SET_ERROR } from '../actions/types';\nvar initialState = {\n  players: [],\n  stats: [],\n  mode: 'squad',\n  perspective: 'FPP',\n  season: '',\n  loading: false,\n  error: null\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case GET_PLAYER_SEASONS:\n      return _objectSpread({}, state, {\n        stats: payload.stats,\n        season: payload.season,\n        players: payload.players,\n        loading: false,\n        error: null\n      });\n\n    case REFRESH_PLAYER_SEASONS:\n      {\n        return _objectSpread({}, state, {\n          stats: payload,\n          loading: false\n        });\n      }\n\n    case LOADING_STATS:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case SET_GAME_MODE:\n      return _objectSpread({}, state, {\n        mode: payload\n      });\n\n    case SET_PERSPECTIVE:\n      return _objectSpread({}, state, {\n        perspective: payload\n      });\n\n    case SET_SEASON:\n      return _objectSpread({}, state, {\n        season: payload\n      });\n\n    case SET_ERROR:\n      return _objectSpread({}, state, {\n        error: payload,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n});","map":null,"metadata":{},"sourceType":"module"}