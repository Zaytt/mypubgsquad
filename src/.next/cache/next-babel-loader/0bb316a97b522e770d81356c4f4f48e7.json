{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { sanitizeString } from '../../utils/Util';\nimport Router from 'next/router';\n\nvar SearchInputGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchInputGroup, _React$Component);\n\n  function SearchInputGroup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchInputGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchInputGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      squadSearch: '',\n      error: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componen\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"routeChange\", function (e) {\n      e.preventDefault();\n\n      var squadSearch = _this.filterString(_this.state.squadSearch);\n\n      if (squadSearch.split(',').length > 10 || squadSearch.split(',').length < 2) {\n        _this.setState({\n          error: 'Player Search must be between 2 and 10 players'\n        });\n\n        return;\n      } else {\n        _this.setState({\n          squadSearch: squadSearch,\n          error: null\n        });\n\n        var path = \"/stats/\".concat(squadSearch);\n        Router.push(path);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"filterString\", function (str) {\n      return sanitizeString(_this.state.squadSearch).split(/[ ,]+/).filter(Boolean).join(',');\n    });\n\n    return _this;\n  }\n\n  _createClass(SearchInputGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          placeholder = _this$props.placeholder,\n          value = _this$props.value,\n          type = _this$props.type,\n          navbar = _this$props.navbar;\n      var _this$state = this.state,\n          squadSearch = _this$state.squadSearch,\n          error = _this$state.error;\n\n      if (navbar) {\n        return React.createElement(\"div\", {\n          className: \"d-flex justify-content-center\"\n        }, React.createElement(\"form\", {\n          className: \"form-inline nav-bar-search-form d-flex justify-content-center\",\n          onSubmit: this.routeChange,\n          autoComplete: \"new-password\"\n        }, React.createElement(\"div\", {\n          className: \"input-group nav-bar-input-group\"\n        }, React.createElement(\"input\", {\n          className: \"form-control \".concat(error ? 'is-invalid' : 'border border-dark '),\n          type: \"search\",\n          name: \"squadSearch\",\n          placeholder: placeholder,\n          \"aria-label\": \"Search\",\n          value: squadSearch,\n          onChange: this.onChange,\n          ref: \"input1\"\n        }), React.createElement(\"div\", {\n          className: \"input-group-append\",\n          onClick: this.routeChange\n        }, React.createElement(\"span\", {\n          className: \"input-group-text text-dark bg-warning border-dark\",\n          style: {\n            cursor: 'pointer'\n          }\n        }, React.createElement(\"i\", {\n          className: \"fas fa-search\"\n        }))))));\n      } else return React.createElement(\"form\", {\n        onSubmit: this.routeChange\n      }, React.createElement(\"small\", {\n        className: \"form-text text-light mb-2\"\n      }, \"Type in up to 10 player names, separated by commas.\"), React.createElement(\"div\", {\n        className: \"input-group mb-1\"\n      }, React.createElement(\"div\", {\n        className: \"input-group-prepend\"\n      }, React.createElement(\"span\", {\n        className: \"input-group-text\"\n      }, React.createElement(\"i\", {\n        className: \"fas fa-search\"\n      }))), React.createElement(\"input\", {\n        className: \"form-control form-control-lg myinput \".concat(error ? 'is-invalid' : ''),\n        type: type,\n        placeholder: placeholder,\n        name: \"squadSearch\",\n        value: value,\n        onChange: this.onChange\n      })), error && React.createElement(\"div\", {\n        className: \"form-text text-danger\"\n      }, error), React.createElement(\"button\", {\n        className: \"btn btn-lg btn-warning mt-4\",\n        type: \"submit\"\n      }, \"Search Stats\"));\n    }\n  }]);\n\n  return SearchInputGroup;\n}(React.Component);\n\nSearchInputGroup.propTypes = {\n  placeholder: PropTypes.string,\n  error: PropTypes.string,\n  icon: PropTypes.string,\n  type: PropTypes.string\n};\nSearchInputGroup.defaultProps = {\n  type: 'text'\n};\nexport default SearchInputGroup;","map":{"version":3,"sources":["/Users/ivan/Documents/Developer/Portfolio-Projects/mypubgsquad/mypubgsquad-next/src/components/common/SearchInputGroup.js"],"names":["React","PropTypes","sanitizeString","Router","SearchInputGroup","squadSearch","error","e","preventDefault","filterString","state","split","length","setState","path","push","target","name","value","str","filter","Boolean","join","props","placeholder","type","navbar","routeChange","onChange","cursor","Component","propTypes","string","icon","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { sanitizeString } from '../../utils/Util';\nimport Router from 'next/router';\n\nclass SearchInputGroup extends React.Component {\n  state = {\n    squadSearch: '',\n    error: null\n  };\n\n  componen;\n  routeChange = e => {\n    e.preventDefault();\n\n    const squadSearch = this.filterString(this.state.squadSearch);\n    if (squadSearch.split(',').length > 10 || squadSearch.split(',').length < 2) {\n      this.setState({ error: 'Player Search must be between 2 and 10 players' });\n      return;\n    } else {\n      this.setState({ squadSearch: squadSearch, error: null });\n      const path = `/stats/${squadSearch}`;\n      Router.push(path);\n    }\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  filterString = str => {\n    return sanitizeString(this.state.squadSearch)\n      .split(/[ ,]+/)\n      .filter(Boolean)\n      .join(',');\n  };\n\n  render() {\n    let { placeholder, value, type, navbar } = this.props;\n    const { squadSearch, error } = this.state;\n    if (navbar) {\n      return (\n        <div className=\"d-flex justify-content-center\">\n          <form\n            className=\"form-inline nav-bar-search-form d-flex justify-content-center\"\n            onSubmit={this.routeChange}\n            autoComplete=\"new-password\"\n          >\n            <div className=\"input-group nav-bar-input-group\">\n              <input\n                className={`form-control ${error ? 'is-invalid' : 'border border-dark '}`}\n                type=\"search\"\n                name=\"squadSearch\"\n                placeholder={placeholder}\n                aria-label=\"Search\"\n                value={squadSearch}\n                onChange={this.onChange}\n                ref=\"input1\"\n              />\n              <div className=\"input-group-append\" onClick={this.routeChange}>\n                <span\n                  className=\"input-group-text text-dark bg-warning border-dark\"\n                  style={{ cursor: 'pointer' }}\n                >\n                  <i className=\"fas fa-search\" />\n                </span>\n              </div>\n            </div>\n          </form>\n        </div>\n      );\n    } else\n      return (\n        <form onSubmit={this.routeChange}>\n          <small className=\"form-text text-light mb-2\">\n            Type in up to 10 player names, separated by commas.\n          </small>\n          <div className=\"input-group mb-1\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">\n                <i className=\"fas fa-search\" />\n              </span>\n            </div>\n\n            <input\n              className={`form-control form-control-lg myinput ${error ? 'is-invalid' : ''}`}\n              type={type}\n              placeholder={placeholder}\n              name=\"squadSearch\"\n              value={value}\n              onChange={this.onChange}\n            />\n          </div>\n          {error && <div className=\"form-text text-danger\">{error}</div>}\n          <button className=\"btn btn-lg btn-warning mt-4\" type=\"submit\">\n            Search Stats\n          </button>\n        </form>\n      );\n  }\n}\n\nSearchInputGroup.propTypes = {\n  placeholder: PropTypes.string,\n  error: PropTypes.string,\n  icon: PropTypes.string,\n  type: PropTypes.string\n};\n\nSearchInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default SearchInputGroup;\n"]},"metadata":{},"sourceType":"module"}