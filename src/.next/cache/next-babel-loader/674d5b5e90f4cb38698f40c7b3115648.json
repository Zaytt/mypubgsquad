{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport App, { Container } from 'next/app';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport { initStore } from '../redux/store';\nimport { authenticateAction, deAuthenticateAction } from '../redux/actions/authActions';\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  _createClass(MyApp, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx, pageProps, user;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n                pageProps = {};\n\n                if (!Component.getInitialProps) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return Component.getInitialProps(ctx);\n\n              case 5:\n                pageProps = _context.sent;\n\n              case 6:\n                if (ctx.req && ctx.req.session.passport) {\n                  user = ctx.req.session.passport.user;\n\n                  if (user) {\n                    ctx.store.dispatch(authenticateAction(user));\n                  } else {\n                    ctx.store.dispatch(deAuthenticateAction());\n                  }\n\n                  pageProps.user = user;\n                }\n\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function MyApp(props) {\n    var _this;\n\n    _classCallCheck(this, MyApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyApp).call(this, props));\n    _this.state = {\n      user: props.pageProps.user\n    };\n    return _this;\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          store = _this$props.store; // Check if theres a user logged in and store it in redux store\n      // if (pageProps.user) store.dispatch(authenticateAction(pageProps.user));\n      // Add the user to the component state\n\n      var props = _objectSpread({}, pageProps, {\n        user: this.state.user\n      });\n\n      return React.createElement(Container, null, React.createElement(Provider, {\n        store: store\n      }, React.createElement(Component, props)));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withRedux(initStore)(MyApp);","map":{"version":3,"sources":["/Users/ivan/Documents/Developer/Portfolio-Projects/mypubgsquad/mypubgsquad-next/src/pages/_app.js"],"names":["React","App","Container","Provider","withRedux","initStore","authenticateAction","deAuthenticateAction","MyApp","Component","ctx","pageProps","getInitialProps","req","session","passport","user","store","dispatch","props","state"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,kBAAT,EAA6BC,oBAA7B,QAAyD,8BAAzD;;IAEMC,K;;;;;;;;;;;;;;;;AAC2BC,gBAAAA,S,QAAAA,S,EAAWC,G,QAAAA,G;AACpCC,gBAAAA,S,GAAY,E;;qBACZF,SAAS,CAACG,e;;;;;;uBACMH,SAAS,CAACG,eAAV,CAA0BF,GAA1B,C;;;AAAlBC,gBAAAA,S;;;AAEF,oBAAID,GAAG,CAACG,GAAJ,IAAWH,GAAG,CAACG,GAAJ,CAAQC,OAAR,CAAgBC,QAA/B,EAAyC;AAC/BC,kBAAAA,IAD+B,GACtBN,GAAG,CAACG,GAAJ,CAAQC,OAAR,CAAgBC,QADM,CAC/BC,IAD+B;;AAEvC,sBAAIA,IAAJ,EAAU;AACRN,oBAAAA,GAAG,CAACO,KAAJ,CAAUC,QAAV,CAAmBZ,kBAAkB,CAACU,IAAD,CAArC;AACD,mBAFD,MAEO;AACLN,oBAAAA,GAAG,CAACO,KAAJ,CAAUC,QAAV,CAAmBX,oBAAoB,EAAvC;AACD;;AAEDI,kBAAAA,SAAS,CAACK,IAAV,GAAiBA,IAAjB;AACD;;iDACM;AAAEL,kBAAAA,SAAS,EAATA;AAAF,iB;;;;;;;;;;;;;;;;;;AAGT,iBAAYQ,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXJ,MAAAA,IAAI,EAAEG,KAAK,CAACR,SAAN,CAAgBK;AADX,KAAb;AAFiB;AAKlB;;;;6BAEQ;AAAA,wBACiC,KAAKG,KADtC;AAAA,UACCV,SADD,eACCA,SADD;AAAA,UACYE,SADZ,eACYA,SADZ;AAAA,UACuBM,KADvB,eACuBA,KADvB,EAGP;AACA;AAEA;;AACA,UAAME,KAAK,qBACNR,SADM;AAETK,QAAAA,IAAI,EAAE,KAAKI,KAAL,CAAWJ;AAFR,QAAX;;AAIA,aACE,oBAAC,SAAD,QACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEC;AAAjB,SACE,oBAAC,SAAD,EAAeE,KAAf,CADF,CADF,CADF;AAOD;;;;EA5CiBlB,G;;AA+CpB,eAAeG,SAAS,CAACC,SAAD,CAAT,CAAqBG,KAArB,CAAf","sourcesContent":["import React from 'react';\nimport App, { Container } from 'next/app';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport { initStore } from '../redux/store';\nimport { authenticateAction, deAuthenticateAction } from '../redux/actions/authActions';\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {};\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n    if (ctx.req && ctx.req.session.passport) {\n      const { user } = ctx.req.session.passport;\n      if (user) {\n        ctx.store.dispatch(authenticateAction(user));\n      } else {\n        ctx.store.dispatch(deAuthenticateAction());\n      }\n\n      pageProps.user = user;\n    }\n    return { pageProps };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: props.pageProps.user\n    };\n  }\n\n  render() {\n    const { Component, pageProps, store } = this.props;\n\n    // Check if theres a user logged in and store it in redux store\n    // if (pageProps.user) store.dispatch(authenticateAction(pageProps.user));\n\n    // Add the user to the component state\n    const props = {\n      ...pageProps,\n      user: this.state.user\n    };\n    return (\n      <Container>\n        <Provider store={store}>\n          <Component {...props} />\n        </Provider>\n      </Container>\n    );\n  }\n}\n\nexport default withRedux(initStore)(MyApp);\n"]},"metadata":{},"sourceType":"module"}