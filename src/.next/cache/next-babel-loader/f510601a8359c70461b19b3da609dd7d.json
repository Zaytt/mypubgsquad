{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _intersectionBy from 'lodash.intersectionby';\nimport axios from 'axios';\n/**\n * @description Get the matches that the given players have played together\n * @param {Array<PlayerSeason>} playerSeasons an array of playerSeasons objects\n * @returns {Array<Matches>} containing arrays of matches that the players in [playerSeasons] have in common\n */\n\nexport var getMatchesTogether = function getMatchesTogether(playerSeasons) {\n  var matchesTogether = playerSeasons[0].relationships.player.relationships.matches;\n\n  for (var i = 1; i < playerSeasons.length; i++) {\n    // Find duo matches that the players have in common\n    matchesTogether = _intersectionBy(matchesTogether, playerSeasons[i].relationships.player.relationships.matches, 'id');\n  }\n\n  return matchesTogether;\n};\nexport var getRankTitle = function getRankTitle(rank) {\n  if (rank === 0) return 'Unranked';\n  var ranks = ['Beginner', 'Novice', 'Experienced', 'Skilled', 'Specialist', 'Expert', 'Survivor', 'LoneSurvivor'];\n  var index = Math.trunc(rank / 1000);\n  if (index === 5) return ranks[5];\n  if (index >= 6) return ranks[6];\n  return ranks[index];\n};\nexport var getRankTitleLevel = function getRankTitleLevel(rank) {\n  if (rank === 0) return 'Unranked';\n  var levels = ['V', 'IV', 'III', 'II', 'I'];\n  var level = Math.trunc(rank % 1000 / 200);\n  return \"\".concat(getRankTitle(rank), \" \").concat(levels[level]);\n};\nexport var sanitizeString = function sanitizeString(str) {\n  var newStr = str.replace(/[^a-z0-9áéíóúñü,.,_-]/gim, ' ');\n  return newStr.trim();\n};\nexport var setAuthToken = function setAuthToken(token) {\n  if (token) {\n    // Apply to every request\n    axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(token);\n  } else {\n    // Delete the Auth Header\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\nexport var isEmpty = function isEmpty(value) {\n  return value == undefined || value == null || typeof value === 'object' && _Object$keys(value).length === 0 || typeof value == 'string' && value.trim().length === 0;\n};","map":null,"metadata":{},"sourceType":"module"}