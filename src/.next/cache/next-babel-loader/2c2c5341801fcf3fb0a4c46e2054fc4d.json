{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _intersectionBy from 'lodash.intersectionby';\nimport axios from 'axios';\n/**\n * @description Get the matches that the given players have played together\n * @param {Array<PlayerSeason>} playerSeasons an array of playerSeasons objects\n * @returns {Array<Matches>} containing arrays of matches that the players in [playerSeasons] have in common\n */\n\nexport var getMatchesTogether = function getMatchesTogether(playerSeasons) {\n  var matchesTogether = playerSeasons[0].relationships.player.relationships.matches;\n\n  for (var i = 1; i < playerSeasons.length; i++) {\n    // Find duo matches that the players have in common\n    matchesTogether = _intersectionBy(matchesTogether, playerSeasons[i].relationships.player.relationships.matches, 'id');\n  }\n\n  return matchesTogether;\n};\nexport var getRankTitle = function getRankTitle(rank) {\n  if (rank === 0) return 'Unranked';\n  var ranks = ['Beginner', 'Novice', 'Experienced', 'Skilled', 'Specialist', 'Expert', 'Survivor', 'LoneSurvivor'];\n  var index = Math.trunc(rank / 1000);\n  if (index === 5) return ranks[5];\n  if (index >= 6) return ranks[6];\n  return ranks[index];\n};\nexport var getRankTitleLevel = function getRankTitleLevel(rank) {\n  if (rank === 0) return 'Unranked';\n  var levels = ['V', 'IV', 'III', 'II', 'I'];\n  var level = Math.trunc(rank % 1000 / 200);\n  return \"\".concat(getRankTitle(rank), \" \").concat(levels[level]);\n};\nexport var sanitizeString = function sanitizeString(str) {\n  var newStr = str.replace(/[^a-z0-9áéíóúñü,.,_-]/gim, ' ');\n  return newStr.trim();\n};\nexport var setAuthToken = function setAuthToken(token) {\n  if (token) {\n    // Apply to every request\n    axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(token);\n  } else {\n    // Delete the Auth Header\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\nexport var isEmpty = function isEmpty(value) {\n  return value == undefined || value == null || typeof value === 'object' && _Object$keys(value).length === 0 || typeof value == 'string' && value.trim().length === 0;\n};","map":{"version":3,"sources":["/Users/ivan/Documents/Developer/Portfolio-Projects/mypubgsquad/mypubgsquad-next/src/utils/Util.js"],"names":["_intersectionBy","axios","getMatchesTogether","playerSeasons","matchesTogether","relationships","player","matches","i","length","getRankTitle","rank","ranks","index","Math","trunc","getRankTitleLevel","levels","level","sanitizeString","str","newStr","replace","trim","setAuthToken","token","defaults","headers","common","isEmpty","value","undefined"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,uBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;;;;;;AAKA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,aAAa,EAAI;AACjD,MAAIC,eAAe,GAAGD,aAAa,CAAC,CAAD,CAAb,CAAiBE,aAAjB,CAA+BC,MAA/B,CAAsCD,aAAtC,CAAoDE,OAA1E;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,aAAa,CAACM,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C;AACAJ,IAAAA,eAAe,GAAGJ,eAAe,CAC/BI,eAD+B,EAE/BD,aAAa,CAACK,CAAD,CAAb,CAAiBH,aAAjB,CAA+BC,MAA/B,CAAsCD,aAAtC,CAAoDE,OAFrB,EAG/B,IAH+B,CAAjC;AAKD;;AACD,SAAOH,eAAP;AACD,CAZM;AAcP,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI,EAAI;AAClC,MAAIA,IAAI,KAAK,CAAb,EAAgB,OAAO,UAAP;AAEhB,MAAMC,KAAK,GAAG,CACZ,UADY,EAEZ,QAFY,EAGZ,aAHY,EAIZ,SAJY,EAKZ,YALY,EAMZ,QANY,EAOZ,UAPY,EAQZ,cARY,CAAd;AAUA,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAI,GAAG,IAAlB,CAAd;AAEA,MAAIE,KAAK,KAAK,CAAd,EAAiB,OAAOD,KAAK,CAAC,CAAD,CAAZ;AACjB,MAAIC,KAAK,IAAI,CAAb,EAAgB,OAAOD,KAAK,CAAC,CAAD,CAAZ;AAEhB,SAAOA,KAAK,CAACC,KAAD,CAAZ;AACD,CAnBM;AAqBP,OAAO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAL,IAAI,EAAI;AACvC,MAAIA,IAAI,KAAK,CAAb,EAAgB,OAAO,UAAP;AAChB,MAAMM,MAAM,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,KAAZ,EAAmB,IAAnB,EAAyB,GAAzB,CAAf;AAEA,MAAMC,KAAK,GAAGJ,IAAI,CAACC,KAAL,CAAYJ,IAAI,GAAG,IAAR,GAAgB,GAA3B,CAAd;AAEA,mBAAUD,YAAY,CAACC,IAAD,CAAtB,cAAgCM,MAAM,CAACC,KAAD,CAAtC;AACD,CAPM;AASP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,GAAG,EAAI;AACnC,MAAIC,MAAM,GAAGD,GAAG,CAACE,OAAJ,CAAY,0BAAZ,EAAwC,GAAxC,CAAb;AACA,SAAOD,MAAM,CAACE,IAAP,EAAP;AACD,CAHM;AAKP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AACnC,MAAIA,KAAJ,EAAW;AACT;AACAxB,IAAAA,KAAK,CAACyB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,qBAA2DH,KAA3D;AACD,GAHD,MAGO;AACL;AACA,WAAOxB,KAAK,CAACyB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACD;AACF,CARM;AAUP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;AAAA,SAC1BA,KAAK,IAAIC,SAAT,IACAD,KAAK,IAAI,IADT,IAEC,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,aAAYA,KAAZ,EAAmBrB,MAAnB,KAA8B,CAF5D,IAGC,OAAOqB,KAAP,IAAgB,QAAhB,IAA4BA,KAAK,CAACP,IAAN,GAAad,MAAb,KAAwB,CAJ3B;AAAA,CAArB","sourcesContent":["import _intersectionBy from 'lodash.intersectionby';\nimport axios from 'axios';\n\n/**\n * @description Get the matches that the given players have played together\n * @param {Array<PlayerSeason>} playerSeasons an array of playerSeasons objects\n * @returns {Array<Matches>} containing arrays of matches that the players in [playerSeasons] have in common\n */\nexport const getMatchesTogether = playerSeasons => {\n  let matchesTogether = playerSeasons[0].relationships.player.relationships.matches;\n\n  for (let i = 1; i < playerSeasons.length; i++) {\n    // Find duo matches that the players have in common\n    matchesTogether = _intersectionBy(\n      matchesTogether,\n      playerSeasons[i].relationships.player.relationships.matches,\n      'id'\n    );\n  }\n  return matchesTogether;\n};\n\nexport const getRankTitle = rank => {\n  if (rank === 0) return 'Unranked';\n\n  const ranks = [\n    'Beginner',\n    'Novice',\n    'Experienced',\n    'Skilled',\n    'Specialist',\n    'Expert',\n    'Survivor',\n    'LoneSurvivor'\n  ];\n  const index = Math.trunc(rank / 1000);\n\n  if (index === 5) return ranks[5];\n  if (index >= 6) return ranks[6];\n\n  return ranks[index];\n};\n\nexport const getRankTitleLevel = rank => {\n  if (rank === 0) return 'Unranked';\n  const levels = ['V', 'IV', 'III', 'II', 'I'];\n\n  const level = Math.trunc((rank % 1000) / 200);\n\n  return `${getRankTitle(rank)} ${levels[level]}`;\n};\n\nexport const sanitizeString = str => {\n  let newStr = str.replace(/[^a-z0-9áéíóúñü,.,_-]/gim, ' ');\n  return newStr.trim();\n};\n\nexport const setAuthToken = token => {\n  if (token) {\n    // Apply to every request\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    // Delete the Auth Header\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\nexport const isEmpty = value =>\n  value == undefined ||\n  value == null ||\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\n  (typeof value == 'string' && value.trim().length === 0);\n"]},"metadata":{},"sourceType":"module"}