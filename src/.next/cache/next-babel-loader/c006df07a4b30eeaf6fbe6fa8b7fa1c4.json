{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { AUTHENTICATE, DEAUTHENTICATE, RESTORE_AUTH_STATE, GET_AUTH_ERRORS } from '../actions/types';\nimport { getCookie, setCookie, removeCookie } from '../../utils/cookie';\nvar initialState = {\n  isAuthenticated: false,\n  user: {},\n  token: {},\n  errors: {}\n};\n\nvar authReducer = function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case DEAUTHENTICATE:\n      return {\n        isAuthenticated: false,\n        user: {},\n        token: {},\n        errors: {}\n      };\n\n    case AUTHENTICATE:\n      return _objectSpread({}, state, {\n        isAuthenticated: true,\n        user: action.payload\n      });\n\n    case DEAUTHENTICATE:\n      return _objectSpread({}, state, {\n        isAuthenticated: false,\n        user: {}\n      });\n\n    case RESTORE_AUTH_STATE:\n      return {\n        isAuthenticated: true,\n        user: action.payload.user\n      };\n\n    case GET_AUTH_ERRORS:\n      return _objectSpread({}, state, {\n        errors: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["/Users/ivan/Documents/Developer/Portfolio-Projects/mypubgsquad/mypubgsquad-next/src/redux/reducers/authReducer.js"],"names":["AUTHENTICATE","DEAUTHENTICATE","RESTORE_AUTH_STATE","GET_AUTH_ERRORS","getCookie","setCookie","removeCookie","initialState","isAuthenticated","user","token","errors","authReducer","state","action","type","payload"],"mappings":";AAAA,SACEA,YADF,EAEEC,cAFF,EAGEC,kBAHF,EAIEC,eAJF,QAKO,kBALP;AAMA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,YAA/B,QAAmD,oBAAnD;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE,KADA;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,KAAK,EAAE,EAHU;AAIjBC,EAAAA,MAAM,EAAE;AAJS,CAAnB;;AAOA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,cAAL;AACE,aAAO;AACLO,QAAAA,eAAe,EAAE,KADZ;AAELC,QAAAA,IAAI,EAAE,EAFD;AAGLC,QAAAA,KAAK,EAAE,EAHF;AAILC,QAAAA,MAAM,EAAE;AAJH,OAAP;;AAOF,SAAKX,YAAL;AACE,+BAAYa,KAAZ;AAAmBL,QAAAA,eAAe,EAAE,IAApC;AAA0CC,QAAAA,IAAI,EAAEK,MAAM,CAACE;AAAvD;;AACF,SAAKf,cAAL;AACE,+BAAYY,KAAZ;AAAmBL,QAAAA,eAAe,EAAE,KAApC;AAA2CC,QAAAA,IAAI,EAAE;AAAjD;;AACF,SAAKP,kBAAL;AACE,aAAO;AACLM,QAAAA,eAAe,EAAE,IADZ;AAELC,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAAP,CAAeP;AAFhB,OAAP;;AAIF,SAAKN,eAAL;AACE,+BACKU,KADL;AAEEF,QAAAA,MAAM,EAAEG,MAAM,CAACE;AAFjB;;AAIF;AACE,aAAOH,KAAP;AAxBJ;AA0BD,CA3BD;;AA6BA,eAAeD,WAAf","sourcesContent":["import {\n  AUTHENTICATE,\n  DEAUTHENTICATE,\n  RESTORE_AUTH_STATE,\n  GET_AUTH_ERRORS\n} from '../actions/types';\nimport { getCookie, setCookie, removeCookie } from '../../utils/cookie';\n\nlet initialState = {\n  isAuthenticated: false,\n  user: {},\n  token: {},\n  errors: {}\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case DEAUTHENTICATE:\n      return {\n        isAuthenticated: false,\n        user: {},\n        token: {},\n        errors: {}\n      };\n\n    case AUTHENTICATE:\n      return { ...state, isAuthenticated: true, user: action.payload };\n    case DEAUTHENTICATE:\n      return { ...state, isAuthenticated: false, user: {} };\n    case RESTORE_AUTH_STATE:\n      return {\n        isAuthenticated: true,\n        user: action.payload.user\n      };\n    case GET_AUTH_ERRORS:\n      return {\n        ...state,\n        errors: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n"]},"metadata":{},"sourceType":"module"}