{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _isEmpty from 'lodash.isempty';\n\nvar SquadStatsSummary =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SquadStatsSummary, _Component);\n\n  function SquadStatsSummary() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SquadStatsSummary);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SquadStatsSummary)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"formatNames\", function () {\n      var text = '';\n      var squad = _this.props.squad;\n\n      if (!_isEmpty(squad)) {\n        text = squad.map(function (playerName, index) {\n          if (index === squad.length - 1) {\n            return '& ' + playerName;\n          } else if (index === squad.length - 2) {\n            return playerName + ' ';\n          } else {\n            return playerName + ', ';\n          }\n        });\n      }\n\n      return text;\n    });\n\n    return _this;\n  }\n\n  _createClass(SquadStatsSummary, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          stats = _this$props.stats,\n          mode = _this$props.mode,\n          perspective = _this$props.perspective;\n      var gameMode = mode + perspective;\n      var matchesInfo,\n          topTenInfo,\n          winInfo,\n          modeInfo = '';\n\n      switch (gameMode) {\n        case 'duo':\n          modeInfo = 'Duo TPP';\n          break;\n\n        case 'duoFPP':\n          modeInfo = 'Duo FPP';\n          break;\n\n        case 'squad':\n          modeInfo = 'Squad TPP';\n          break;\n\n        case 'squadFPP':\n          modeInfo = 'Squad FPP';\n          break;\n\n        default:\n          modeInfo = '';\n      } // A little formating to handle plurals\n\n\n      if (!_isEmpty(stats)) {\n        matchesInfo = stats[gameMode].gamesPlayed === 1 ? \"Played \".concat(stats[gameMode].gamesPlayed, \" \").concat(modeInfo, \" Match Together\") : \"Played \".concat(stats[gameMode].gamesPlayed, \" \").concat(modeInfo, \" Matches Together\");\n        topTenInfo = stats[gameMode].top10s === 1 ? \"Reached Top Ten \".concat(stats[gameMode].top10s, \" Time\") : \"Reached Top Ten \".concat(stats[gameMode].top10s, \" Times\");\n        winInfo = stats[gameMode].wins === 1 ? \"Earned \".concat(stats[gameMode].wins, \" Chicken Dinner\") : \"Earned \".concat(stats[gameMode].wins, \" Chicken Dinners\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"row d-flex justify-content-center\"\n      }, React.createElement(\"div\", {\n        className: \"col-lg-8 col-md-10 col-12\"\n      }, React.createElement(\"h4\", {\n        className: \"text-dark text-center\"\n      }, \"In the past 14 days,\"), React.createElement(\"h3\", {\n        className: \"text-dark text-center mb-4\"\n      }, this.formatNames(), \" have: \"), React.createElement(\"ul\", {\n        className: \"list-group  \"\n      }, React.createElement(\"li\", {\n        className: \"list-group-item bg-dark text-light border border-dark\"\n      }, React.createElement(\"h4\", {\n        className: \"text-center\"\n      }, React.createElement(\"i\", {\n        className: \"fas fa-users\"\n      }), \" \", React.createElement(\"span\", null, matchesInfo))), React.createElement(\"li\", {\n        className: \"list-group-item bg-dark text-light border border-dark\"\n      }, React.createElement(\"h4\", {\n        className: \"text-center\"\n      }, React.createElement(\"i\", {\n        className: \"fas fa-medal\"\n      }), \" \", topTenInfo)), React.createElement(\"li\", {\n        className: \"list-group-item bg-warning border border-dark\"\n      }, React.createElement(\"h4\", {\n        className: \"text-center\"\n      }, React.createElement(\"i\", {\n        className: \"fas fa-trophy\"\n      }), \" \", winInfo)))));\n    }\n  }]);\n\n  return SquadStatsSummary;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    stats: state.squad.stats,\n    squad: state.squad.membersFetched,\n    mode: state.squad.mode,\n    perspective: state.squad.perspective\n  };\n};\n\nvar mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(SquadStatsSummary);","map":null,"metadata":{},"sourceType":"module"}